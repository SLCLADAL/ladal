rbind(top, bot) %>%
# create a ggplot
ggplot(aes(x = reorder(token, G2, mean), y = G2, label = G2, fill = type)) +
# add a bar plot using the 'phi' values
geom_bar(stat = "identity") +
# add text labels above the bars with rounded 'phi' values
geom_text(aes(y = ifelse(G2 > 0, G2 - 1, G2 + 1),
label = round(G2, 1)), color = "white", size = 3) +
# flip the coordinates to have horizontal bars
coord_flip() +
# set the theme to a basic white and black theme
theme_bw() +
# remove legend
theme(legend.position = "none") +
# define colors
scale_fill_manual(values = c("mediumblue", "orange")) +
# set the x-axis label to "Token" and y-axis label to "Keyness statistic"
labs(title = "Top 10 keywords for target and reference", x = "Keyword", y = "Keyness statistic")
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
keys <- keystats(keystb)
# inspect first 10 rows of the data
head(keys, 10)
# get top 10 keywords for text 1
top <- keys %>% dplyr::ungroup() %>% dplyr::slice_head(n = 10)
top
sessionInfo()
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
keys <- keystats(keystb)
# inspect first 10 rows of the data
head(keys, 10)
# get top 10 keywords for text 1
top <- keys %>% dplyr::ungroup() %>% dplyr::slice_head(n = 10)
# get top 10 keywords for text 2
bot <- keys %>% dplyr::ungroup() %>% dplyr::slice_tail(n = 10)
# combine into table
rbind(top, bot) %>%
# create a ggplot
ggplot(aes(x = reorder(token, G2, mean), y = G2, label = G2, fill = type)) +
# add a bar plot using the 'phi' values
geom_bar(stat = "identity") +
# add text labels above the bars with rounded 'phi' values
geom_text(aes(y = ifelse(G2 > 0, G2 - 1, G2 + 1),
label = round(G2, 1)), color = "white", size = 3) +
# flip the coordinates to have horizontal bars
coord_flip() +
# set the theme to a basic white and black theme
theme_bw() +
# remove legend
theme(legend.position = "none") +
# define colors
scale_fill_manual(values = c("mediumblue", "orange")) +
# set the x-axis label to "Token" and y-axis label to "Keyness statistic"
labs(title = "Top 10 keywords for target and reference", x = "Keyword", y = "Keyness statistic")
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
keys <- keystats(keystb)
# inspect first 10 rows of the data
head(keys, 10)
# get top 10 keywords for text 1
top <- keys %>% dplyr::ungroup() %>% dplyr::slice_head(n = 10)
# get top 10 keywords for text 2
bot <- keys %>% dplyr::ungroup() %>% dplyr::slice_tail(n = 10)
# combine into table
bot
rbind(top, bot) %>%
# create a ggplot
ggplot(aes(x = reorder(token, G2, mean), y = G2, label = G2, fill = type)) +
# add a bar plot using the 'phi' values
geom_bar(stat = "identity") +
# add text labels above the bars with rounded 'phi' values
geom_text(aes(y = ifelse(G2 > 0, G2 - 1, G2 + 1),
label = round(G2, 1)), color = "white", size = 3) +
# flip the coordinates to have horizontal bars
coord_flip() +
# set the theme to a basic white and black theme
theme_bw() +
# remove legend
theme(legend.position = "none") +
# define colors
scale_fill_manual(values = c("mediumblue", "orange")) +
# set the x-axis label to "Token" and y-axis label to "Keyness statistic"
labs(title = "Top 10 keywords for target and reference", x = "Keyword", y = "Keyness statistic")
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
keys <- keystats(keystb)
# inspect first 10 rows of the data
head(keys, 10)
# get top 10 keywords for text 1
top <- keys %>% dplyr::ungroup() %>% dplyr::slice_head(n = 10)
# get top 10 keywords for text 2
bot <- keys %>% dplyr::ungroup() %>% dplyr::slice_tail(n = 10)
# combine into table
bot
sessionInfo()
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
keys <- keystats(keystb)
# inspect first 10 rows of the data
head(keys, 10)
# get top 10 keywords for text 1
top <- keys %>% dplyr::ungroup() %>% dplyr::slice_head(n = 10)
sessionInfo()
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
keys <- keystats(keystb)
# inspect first 10 rows of the data
head(keys, 10)
# get top 10 keywords for text 1
top <- keys %>% dplyr::ungroup() %>% dplyr::slice_head(n = 10)
top
sessionInfo()
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
keys <- keystats(keystb)
# inspect first 10 rows of the data
head(keys, 10)
summary(keystb)  # Get a summary of your dataset
# get top 10 keywords for text 1
top <- keys %>% dplyr::ungroup() %>% dplyr::slice_head(n = 10)
top
sessionInfo()
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
keys <- keystats(keystb)
# inspect first 10 rows of the data
summary(keystb)  # Get a summary of your dataset
# get top 10 keywords for text 1
top <- keys %>% dplyr::ungroup() %>% dplyr::slice_head(n = 10)
top
sessionInfo()
source("~/Documents/projects/LADALQ/tools/keytool/rscripts/loadkeytxts.R", echo=TRUE)
# load function that helps loading texts
source("tools/keytool/rscripts/loadkeytxts.R")
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadtxts("notebooks/MyTexts/Target", "notebooks/MyTexts/Reference")
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts/Target", "notebooks/MyTexts/Reference")
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
keys <- keystats(keystb)
# inspect first 10 rows of the data
head(keys, 10)
# get top 10 keywords for text 1
top <- keys %>% dplyr::ungroup() %>% dplyr::slice_head(n = 10)
# get top 10 keywords for text 2
bot <- keys %>% dplyr::ungroup() %>% dplyr::slice_tail(n = 10)
# combine into table
rbind(top, bot) %>%
# create a ggplot
ggplot(aes(x = reorder(token, G2, mean), y = G2, label = G2, fill = type)) +
# add a bar plot using the 'phi' values
geom_bar(stat = "identity") +
# add text labels above the bars with rounded 'phi' values
geom_text(aes(y = ifelse(G2 > 0, G2 - 1, G2 + 1),
label = round(G2, 1)), color = "white", size = 3) +
# flip the coordinates to have horizontal bars
coord_flip() +
# set the theme to a basic white and black theme
theme_bw() +
# remove legend
theme(legend.position = "none") +
# define colors
scale_fill_manual(values = c("mediumblue", "orange")) +
# set the x-axis label to "Token" and y-axis label to "Keyness statistic"
labs(title = "Top 10 keywords for target and reference", x = "Keyword", y = "Keyness statistic")
sessionInfo()
# load function that helps loading texts
source("tools/keytool/rscripts/loadkeytxts.R")
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts()
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
keys <- keystats(keystb)
# load function that helps loading texts
source("tools/keytool/rscripts/loadkeytxts.R")
# load function that helps loading texts
source("rscripts/loadkeytxts.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts/Target", "notebooks/MyTexts/Reference")
# inspect the structure of the text object
str(text)
# load function that helps loading texts
source("rscripts/prepkeydat.R")
# prepare texts
keystb <- prepkeydat(text)
# inspect the structure of the text object
head(keystb)
# load function that extract keyness measures (default ordering by G2)
source("rscripts/keystats.R")
# load texts
keys <- keystats(keystb)
# inspect first 10 rows of the data
head(keys, 10)
# get top 10 keywords for text 1
top <- keys %>% dplyr::ungroup() %>% dplyr::slice_head(n = 10)
# get top 10 keywords for text 2
bot <- keys %>% dplyr::ungroup() %>% dplyr::slice_tail(n = 10)
# combine into table
rbind(top, bot) %>%
# create a ggplot
ggplot(aes(x = reorder(token, G2, mean), y = G2, label = G2, fill = type)) +
# add a bar plot using the 'phi' values
geom_bar(stat = "identity") +
# add text labels above the bars with rounded 'phi' values
geom_text(aes(y = ifelse(G2 > 0, G2 - 1, G2 + 1),
label = round(G2, 1)), color = "white", size = 3) +
# flip the coordinates to have horizontal bars
coord_flip() +
# set the theme to a basic white and black theme
theme_bw() +
# remove legend
theme(legend.position = "none") +
# define colors
scale_fill_manual(values = c("mediumblue", "orange")) +
# set the x-axis label to "Token" and y-axis label to "Keyness statistic"
labs(title = "Top 10 keywords for target and reference", x = "Keyword", y = "Keyness statistic")
sessionInfo()
# load function that helps loading texts
source("tools/kwictool/rscripts/loadtxts.R")
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load texts
text <- loadtxts("notebooks/MyTexts")
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load textstext <- loadtxts("notebooks/MyTexts")
# inspect the structure of the text object
str(text)
mykwic <- kwic(
# tokenise and define text
tokens(text),
# define target word (this is called the "search pattern")
pattern = phrase("the"),
# 5 words before and after
window = 5,
# no regex
valuetype = "regex",
# words separated by whitespace
separator = " ",
# search should be case insensitive
case_insensitive = TRUE)
# inspect resulting kwic
mykwic %>%
# convert into a data frame
as.data.frame() %>%
# show only first 10 results
head(10)
sessionInfo()
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load texts
text <- loadtxts("notebooks/MyTexts")
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load texts
text <- loadtxts("notebooks/MyTexts")
# inspect the structure of the text object
str(text)
mykwic <- kwic(
# tokenise and define text
tokens(text),
# define target word (this is called the "search pattern")
pattern = phrase("the"),
# 5 words before and after
window = 5,
# no regex
valuetype = "regex",
# words separated by whitespace
separator = " ",
# search should be case insensitive
case_insensitive = TRUE)
# inspect resulting kwic
mykwic %>%
# convert into a data frame
as.data.frame() %>%
# show only first 10 results
head(10)
sessionInfo()
# load function that loads xlsx data
source("tools/nettool/rscripts/loadnetdata.R")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
text <- loadkeytxts("notebooks/MyTexts")
ed <- loadnetdata("notebooks/MyTables")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
# inspect the structure of the data
ed
# load function that generates a network graph
source("rscripts/netplot.R")
# plot the network
netplot(x = ed, edge_col = "gray80", edge_curv= .2, node_tran = .2, n_min = 5, n_max = 10, n_col = "gray10")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
# load texts
ed <- loadnetdata("notebooks/MyTables/test.xlsx")
# load function that loads xlsx data
source("tools/nettool/rscripts/loadnetdata.R")
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
# load texts
ed <- loadnetdata("notebooks/MyTables")
loadnetdata <- function("notebooks/MyTables"){
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
loadnetdata(["notebooks/MyTables"])
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
getwd()
setwd("~/Documents/projects/LADALQ")
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
setwd("~/Documents/projects/LADALQ")
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
setwd("~/Documents/projects/LADALQ/tools/nettool")
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
# load function that loads xlsx data
source("rscripts/loadnetdata.R")
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/nettool/rscripts/loadnetdata.R", echo=TRUE)
