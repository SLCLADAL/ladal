source("~/Documents/projects/LADALQ/tools/topictool/rscripts/preptop.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/topictool/rscripts/preptop.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/topictool/rscripts/preptop.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/topictool/rscripts/preptop.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/topictool/rscripts/preptop.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/topictool/rscripts/preptop.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/topictool/rscripts/preptop.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/topictool/rscripts/preptop.R", echo=TRUE)
source("~/Documents/projects/LADALQ/tools/topictool/rscripts/preptop.R", echo=TRUE)
getwd()
source("rscripts/loadtxts.R")
corpus <- loadtxts("notebooks/MyTexts")
preptop(corpus)
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
getwd()
source("rscripts/loadtxts.R")
corpus <- loadtxts("notebooks/MyTexts")
preptop(corpus)
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2)
# inspect
terms(tmod_slda)
files <- stringr::str_replace_all(names(topics(tmod_slda)), ".*/(.*?).txt", "\\1")
cleancontent <- corpus
topics <- topics(tmod_slda)
# generate data frame
df <- data.frame(files, cleancontent, topics) %>%
dplyr::mutate_if(is.character, factor)
# inspect
head(df)
sessionInfo()
getwd()
corpus <- loadtxts("notebooks/MyTexts")
preptop(corpus)
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2)
# inspect
terms(tmod_slda)
files <- stringr::str_replace_all(names(topics(tmod_slda)), ".*/(.*?).txt", "\\1")
cleancontent <- corpus
topics <- topics(tmod_slda)
# generate data frame
df <- data.frame(files, cleancontent, topics) %>%
dplyr::mutate_if(is.character, factor)
# inspect
head(df)
sessionInfo()
getwd()
source("rscripts/loadtxts.R")
corpus <- loadtxts("notebooks/MyTexts")
preptop(corpus)
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2)
# inspect
terms(tmod_slda)
files <- stringr::str_replace_all(names(topics(tmod_slda)), ".*/(.*?).txt", "\\1")
cleancontent <- corpus
topics <- topics(tmod_slda)
# generate data frame
df <- data.frame(files, cleancontent, topics) %>%
dplyr::mutate_if(is.character, factor)
# inspect
head(df)
sessionInfo()
getwd()
source("rscripts/loadtxts.R")
corpus <- loadtxts("notebooks/MyTexts")
preptop(corpus)
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2)
# inspect
terms(tmod_slda)
files <- stringr::str_replace_all(names(topics(tmod_slda)), ".*/(.*?).txt", "\\1")
cleancontent <- corpus
topics <- topics(tmod_slda)
# generate data frame
df <- data.frame(files, cleancontent, topics) %>%
dplyr::mutate_if(is.character, factor)
# inspect
head(df)
sessionInfo()
getwd()
source("rscripts/loadtxts.R")
corpus <- loadtxts("notebooks/MyTexts")
source("rscripts/preptop.R")
preptop(corpus)
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2)
# inspect
terms(tmod_slda)
files <- stringr::str_replace_all(names(topics(tmod_slda)), ".*/(.*?).txt", "\\1")
cleancontent <- corpus
topics <- topics(tmod_slda)
# generate data frame
df <- data.frame(files, cleancontent, topics) %>%
dplyr::mutate_if(is.character, factor)
# inspect
head(df)
sessionInfo()
# load function that helps loading texts
source("tools/topictool/rscripts/loadtxts.R")
# load function that helps loading texts
source("tools/topictool/rscripts/loadtxts.R")
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load texts
corpus <- loadtxts("notebooks/MyTexts")
# inspect the structure of the text object
str(corpus)
# load function that helps loading texts
source("rscripts/preptop.R")
# clean corpus and convert to dfm
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(
Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")
))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2
)
# inspect
terms(tmod_slda)
files <- stringr::str_replace_all(names(topics(tmod_slda)), ".*/(.*?).txt", "\\1")
cleancontent <- corpus
topics <- topics(tmod_slda)
# generate data frame
df <- data.frame(files, cleancontent, topics) %>%
dplyr::mutate_if(is.character, factor)
# inspect
head(df)
sessionInfo()
install.packages("quanteda")
packageVersion("seededlda")
remove.packages("quanteda")
remove.packages("seededlda")
install.packages("quanteda")
install.packages("seededlda")
install.packages("quanteda")
source("~/.active-rstudio-document", echo=TRUE)
R.version.string
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
# load function that helps loading texts
source("tools/topictool/rscripts/loadtxts.R")
# load function that helps loading texts
source("tools/topictool/rscripts/loadtxts.R")
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load texts
corpus <- loadtxts("notebooks/MyTexts")
# inspect the structure of the text object
str(corpus)
# load function that helps loading texts
source("rscripts/preptop.R")
# clean corpus and convert to dfm
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2)
# inspect
terms(tmod_slda)
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load texts
corpus <- loadtxts("notebooks/MyTexts")
# inspect the structure of the text object
str(corpus)
# load function that helps loading texts
source("rscripts/preptop.R")
# clean corpus and convert to dfm
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2)
# inspect
files <- stringr::str_replace_all(names(topics(tmod_slda)), ".*/(.*?).txt", "\\1")
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load texts
corpus <- loadtxts("notebooks/MyTexts")
# inspect the structure of the text object
str(corpus)
# load function that helps loading texts
source("rscripts/preptop.R")
# clean corpus and convert to dfm
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2)
# inspect
files <- rownames(clean_dfm)
cleancontent <- corpus
topics <- apply(tmod_slda$theta, 1, which.max)
# generate data frame
df <- data.frame(files, cleancontent, topics) %>%
dplyr::mutate_if(is.character, factor)
# inspect
head(df)
sessionInfo()
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load texts
corpus <- loadtxts("notebooks/MyTexts")
# inspect the structure of the text object
str(corpus)
# load function that helps loading texts
source("rscripts/preptop.R")
# clean corpus and convert to dfm
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2)
# inspect
terms(tmod_slda)
# load function that helps loading texts
source("tools/topictool/rscripts/loadtxts.R")
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load texts
corpus <- loadtxts("notebooks/MyTexts")
# inspect the structure of the text object
str(corpus)
# load function that helps loading texts
source("rscripts/preptop.R")
# clean corpus and convert to dfm
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2)
# inspect
tmod_slda$theta
files <- stringr::str_replace_all(names(topics(tmod_slda)), ".*/(.*?).txt", "\\1")
# load function that helps loading texts
source("tools/topictool/rscripts/loadtxts.R")
# load function that helps loading texts
source("rscripts/loadtxts.R")
# load texts
corpus <- loadtxts("notebooks/MyTexts")
# inspect the structure of the text object
str(corpus)
# load function that helps loading texts
source("rscripts/preptop.R")
# clean corpus and convert to dfm
clean_dfm <- preptop(corpus)
# inspect
# generate model: change k to different numbers, e.g. 10 or 15 and look for consistencies in the keywords for the topics below.
tmlda <- topicmodels::LDA(clean_dfm, k = 5, control = list(seed = 1234))
# load function that tabulates top terms of topics
source("rscripts/tabtop.R")
# inspect
tabtop(tmlda, 10)
termprobs_tmlda <- tidytext::tidy(tmlda, matrix = "beta")
# inspect
head(termprobs_tmlda)
docprobs_tmlda <- tidy(tmlda, matrix = "gamma")
# inspect
head(docprobs_tmlda)
# semisupervised LDA
dict <- dictionary(list(
Topic01 = c("computer", "information", "technology"),
Topic02 = c("students", "courses", "education"),
Topic03 = c("movie", "film", "watch"),
Topic04 = c("women", "feminist", "equality"),
Topic05 = c("money", "investment", "finance")
))
tmod_slda <- seededlda::textmodel_seededlda(clean_dfm,
dict,
residual = TRUE,
min_termfreq = 2
)
# inspect
tmod_slda$theta
files <- rownames(clean_dfm)
cleancontent <- corpus
topics <- apply(tmod_slda$theta, 1, which.max)
# generate data frame
df <- data.frame(files, cleancontent, topics) %>%
dplyr::mutate_if(is.character, factor)
# inspect
head(df)
sessionInfo()
