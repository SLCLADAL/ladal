knitr::include_graphics("https://slcladal.github.io/images/uq1.jpg")
knitr::include_graphics("https://slcladal.github.io/images/gy_chili.jpg")
# activate packages
library(dplyr)
library(stringr)
library(quanteda)
library(hunspell)
library(flextable)
# activate klippy for copy-to-clipboard button
klippy::klippy()
words <- c("analyze", "langauge", "data")
correct <- hunspell_check(words)
print(correct)
hunspell_suggest(words[!correct])
# read in text
exampletext <- base::readRDS(url("https://slcladal.github.io/data/tx1.rda", "rb"))
# inspect
exampletext
errors <- hunspell(exampletext)
errors[[1]]
hunspell_suggest(errors[[1]])
toks <- c("love", "loving", "lovingly", "loved", "lover", "lovely")
hunspell_stem(toks)
texttable <- quanteda::tokens("Noam said he loves to analyze langauge and collors.") %>%
unlist() %>%
as.data.frame() %>%
dplyr::rename(words = 1) %>%
dplyr::mutate(
id = 1:nrow(.),
error = hunspell::hunspell_check(words)
) %>%
dplyr::relocate(id)
# inspect data
texttable %>%
as.data.frame() %>%
flextable::flextable() %>%
flextable::set_table_properties(width = .95, layout = "autofit") %>%
flextable::theme_zebra() %>%
flextable::fontsize(size = 12) %>%
flextable::fontsize(size = 12, part = "header") %>%
flextable::align_text_col(align = "center") %>%
flextable::set_caption(caption = "") %>%
flextable::border_outer()
texttable2 <- texttable %>%
# add suggestions
dplyr::mutate(
suggestions = ifelse(error == F,
paste0(hunspell_suggest(words), ", "),
""
),
# clean suggestions
suggestions = stringr::str_remove_all(suggestions, fixed("c(")),
suggestions = stringr::str_remove_all(suggestions, fixed(")")),
suggestions = stringr::str_remove_all(suggestions, ", {0,1}$")
)
# inspect data
texttable2 %>%
as.data.frame() %>%
flextable::flextable() %>%
flextable::set_table_properties(width = .95, layout = "autofit") %>%
flextable::theme_zebra() %>%
flextable::fontsize(size = 12) %>%
flextable::fontsize(size = 12, part = "header") %>%
flextable::align_text_col(align = "center") %>%
flextable::set_caption(caption = "") %>%
flextable::border_outer()
texttable3 <- texttable2 %>%
# replace errors with the first suggestion
dplyr::mutate(corrected = dplyr::case_when(
error == T ~ words,
error == F ~ stringr::str_remove_all(suggestions, '\\", .*'),
T ~ words
)) %>%
# clean the corrected words
dplyr::mutate(corrected = stringr::str_remove_all(corrected, '^\\"')) %>%
# insert words where we do not want the suggestions but the original word
dplyr::mutate(corrected = dplyr::case_when(
words == "Noam" ~ words,
T ~ corrected
))
# inspect data
texttable3 %>%
as.data.frame() %>%
flextable::flextable() %>%
flextable::set_table_properties(width = .95, layout = "autofit") %>%
flextable::theme_zebra() %>%
flextable::fontsize(size = 12) %>%
flextable::fontsize(size = 12, part = "header") %>%
flextable::align_text_col(align = "center") %>%
flextable::set_caption(caption = "") %>%
flextable::border_outer()
texttable4 <- texttable3 %>%
dplyr::summarise(
tokens = nrow(.),
types = length(names(table(tolower(words)))),
errors_n = sum(ifelse(corrected == words, 0, 1)),
errors_percent = errors_n / tokens * 100
)
# inspect data
texttable4 %>%
as.data.frame() %>%
flextable::flextable() %>%
flextable::set_table_properties(width = .95, layout = "autofit") %>%
flextable::theme_zebra() %>%
flextable::fontsize(size = 12) %>%
flextable::fontsize(size = 12, part = "header") %>%
flextable::align_text_col(align = "center") %>%
flextable::set_caption(caption = "") %>%
flextable::border_outer()
correctedtext <- paste0(texttable3$corrected, collapse = " ") %>%
stringr::str_replace_all(" \\.", ".")
correctedtext
hunspell("At LADAL we like to analyse language and colours.")
hunspell("At LADAL we like to analyse language and colours.", dict = "en_GB")
knitr::include_graphics("https://slcladal.github.io/images/InstallLanguages.png")
hunspell("Im LADAL analysieren wir Sprachen und Farben.", dict = "de")
