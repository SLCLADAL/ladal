{
  "hash": "85a172b92bb08d1816639d61499c99be",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Management and Reproducibility\"\nauthor: \"Martin Schweinberger\"\n---\n\n\n\n![](/images/uq1.jpg){ width=100% }\n\n# Introduction{-}\n\n![](/images/g_chili.jpg){ width=15% style=\"float:right; padding:10px\" }\n\nThis tutorial introduces basic data management techniques, version control measures, and issues relating to reproducible research. \n\nThis tutorial is designed to provide essential guidance on data management, transparency, and reproducibility for individuals working with language data. While it is accessible to all users, it focuses particularly on beginners and intermediate users of R, aiming to enhance their data management skills and utilize RStudio to make their analyses more transparent and reproducible.\n\n![](/images/reprocicle.png){ width=40% style=\"float:right; padding:10px\" }\n\n\nThe objective of this tutorial is to demonstrate fundamental data management strategies and exemplify selected methods that improve the reproducibility of analytic workflows. By following this tutorial, users will learn to implement best practices in data management, ensure their workflows are transparent, and make their results reproducible, thereby increasing the reliability and credibility of their research.\n\nFurthermore, the tutorial will cover essential techniques such as version control with Git, using R Markdown for creating dynamic documents, strategies for organizing and documenting your code effectively, developing interactive Jupyter notebooks, and creating eBooks that are accessible via any browser. These methods are crucial for creating analyses that others can easily understand, verify, and build upon. By adopting these practices, you contribute to a more open and collaborative scientific community.\n\n\n\n<div class=\"warning\" style='padding:0.1em; background-color:#f2f2f2; color:#51247a'>\n<span>\n<p style='margin-top:1em; text-align:center'>\nThe entire R Notebook for the tutorial can be downloaded [**here**](https://slcladal.github.io/content/repro.Rmd).  If you want to render the R Notebook on your machine, i.e. knitting the document to html or a pdf, you need to make sure that you have R and RStudio installed and you also need to download the [**bibliography file**](https://slcladal.github.io/content/bibliography.bib) and store it in the same folder where you store the Rmd file. <br></p>\n<p style='margin-left:1em;'>\n</p></span>\n</div>\n\n<br>\n\n\nIn data science or when working with data, issues relating to organizing files and folders, managing data and projects, avoiding data loss, and efficient work flows are essential. The idea behind this tutorial is to address this issue and provide advice on how to handle data and creating efficient workflows. \n\nSome of the contents of this tutorial build on the [*Digital Essentials module*](https://web.library.uq.edu.au/research-tools-techniques/digital-essentials) that is offered by the UQ library, the *Reproducible Research resources* (created by Griffith University’s Library and eResearch Services), and on Amanda Miotto's [Reproducible Reseach Things](https://github.com/amandamiotto/Reproducible-Research-Things) (see also [here](https://guereslib.github.io/Reproducible-Research-Things/) for an alternative version and [here for the GitHub repo](https://github.com/guereslib/Reproducible-Research-Things)). You can find additional information on all things relating to computers, the digital world, and computer safety in the [*Digital Essentials* course](https://web.library.uq.edu.au/research-tools-techniques/digital-essentials) that is part of UQ's library resources.\n\n# Basic concepts \n\n\nThis section introduces some basic concepts and provides useful tips for managing your research data.\n\n## What is Data Management? {-}\n\nData management refers to the comprehensive set of practices, policies, and processes used to manage data throughout its lifecycle [@corea2019data, chapter 1]. This involves ensuring that data is collected, stored, processed, and maintained in a way that it can be effectively used for analytical purposes. Good data management is crucial for enabling accurate, reliable, and meaningful analysis.\n\nKey components of data management in data analytics include:\n\n1. **Data Collection and Acquisition**: Gathering data from various sources, which can include databases, APIs, sensors, web scraping, and more. The goal is to ensure the data is collected in a systematic and consistent manner.\n\n2. **Data Storage**: Utilizing databases, data warehouses, data lakes, or cloud storage solutions to store collected data securely and efficiently. This ensures that data is easily accessible for analysis.\n\n3. **Data Cleaning and Preparation**: Involves identifying and correcting errors or inconsistencies in the data to improve its quality. This step is critical for ensuring the accuracy of any subsequent analysis.\n\n4. **Data Integration**: Combining data from different sources into a single, unified dataset. This often involves ETL (Extract, Transform, Load) processes where data is extracted from different sources, transformed into a consistent format, and loaded into a central repository.\n\n5. **Data Governance**: Establishing policies and procedures to ensure data is managed properly. This includes defining roles and responsibilities, ensuring data privacy and security, and maintaining compliance with regulations.\n\n6. **Data Security**: Implementing measures to protect data from unauthorized access, breaches, and other threats. This involves encryption, access controls, and regular security audits.\n\n7. **Data Analysis**: Using statistical methods, algorithms, and software tools to analyze data and extract meaningful insights. This can involve descriptive, predictive, and prescriptive analytics.\n\n8. **Data Visualization**: Presenting data in graphical or pictorial formats such as charts, graphs, and dashboards to help users understand trends, patterns, and insights more easily.\n\n9. **Data Quality Management**: Continuously monitoring and maintaining the accuracy, consistency, and reliability of data. This involves data profiling, validation, and auditing.\n\n10. **Metadata Management**: Managing data about data, which includes documenting the data's source, format, and usage. Metadata helps in understanding the context and provenance of the data.\n\n11. **Data Lifecycle Management**: Managing data through its entire lifecycle, from initial creation and storage to eventual archiving and deletion. This ensures that data is managed in a way that supports its long-term usability and compliance with legal requirements.\n\nEffective data management practices ensure that data is high quality, well-organized, and accessible, which is essential for accurate and actionable data analytics. By implementing robust data management strategies, organizations can improve the reliability of their analyses, make better-informed decisions, and achieve greater operational efficiency.\n\nFor further reading and deeper insights, consider these resources:\n- [Data Management Association International (DAMA)](https://dama.org)\n- [Data Management Body of Knowledge (DAMA-DMBOK)](https://dama.org/content/body-knowledge)\n- [Gartner's Data Management Solutions](https://www.gartner.com/en/information-technology/glossary/data-management-solutions-dmss)\n\n## Reproducibility and Transparency {-}\n\nReproducibility is a cornerstone of scientific inquiry, demanding that two analyses empirical analyses yield consistent outcomes under equivalent conditions and with comparable populations under scrutiny [@gundersen2021repro; @goodman2016repro]. Historically, the reproducibility of scientific findings was often assumed, but this assumption has been substantially challenged by the Replication Crisis [@moonesinghe2007false; @simons2014repro]. The Replication Crisis, extensively documented [@osc2015repro, @ioannidis2005false], represents an ongoing methodological quandary stemming from the failure to reproduce critical medical studies and seminal experiments in social psychology during the late 1990s and early 2000s. By the early 2010s, the crisis had extended its reach to encompass segments of the social and life sciences [@anderson2016repro, @noba2019replication], significantly eroding public trust in the results of studies from the humanities and social sciences [@sciencealert2018replication; @atlantic2018psychology].\n\nBelow are definitions of terms relevant for distinguishing in discussions around reproducibility and transparency. This clarification is necessary to avoid misunderstandings stemming from the common conflation of similar yet different terms in this discourse.\n\n- **Replication**: Replication involves repeating a study's procedure to determine if the prior findings can be reproduced. Unlike reproduction, which utilizes the same data and method, replication entails applying a similar method to different but comparable data. The aim is to ascertain if the results of the original study are robust across new data from the same or similar populations. Replication serves to advance theory by subjecting existing understanding to new evidence [@nosek2020replication; @moonesinghe2007false].\n\n- **Reproduction**: In contrast, reproduction (or computational replication) entails repeating a study by applying the exact same method to the exact same data (this is what @mcenery2022fundamental refer to as *repeatability*). The results should ideally be identical or highly similar to those of the original study. Reproduction relies on reproducibility, which assumes that the original study's authors have provided sufficient information for others to replicate the study. This concept often pertains to the computational aspects of research, such as version control of software tools and environments [@nosek2020replication].\n\n- **Robustness**: Robustness refers to the stability of results when studies are replicated using different procedures on either the same or different yet similar data. While replication studies may yield different results from the original study due to the use of different data, robust results demonstrate consistency in the direction and size of effects across varying procedures [@nosek2020replication].\n\n- **Triangulation**: Recognizing the limitations of replication and reproducibility in addressing the issues highlighted by the Replication Crisis, researchers emphasize the importance of triangulation. Triangulation involves strategically employing multiple approaches to address a single research question, thereby enhancing the reliability and validity of findings [@munafo2018robust].\n\n- **Practical versus theoretical/formal reproducibility**: This distinction distinguishes between practical and theoretical or formal reproducibility [@msch2024repro]. Practical reproducibility emphasizes the provision of resources by authors to facilitate the replication of a study with minimal time and effort. These resources may include notebooks, code repositories, or detailed documentation, allowing for the reproducibility of studies across different computers and software environments [@gruning2018practical].\n\n- **Transparency**: Transparency in research entails clear and comprehensive reporting of research procedures, methods, data, and analytical techniques. It involves providing sufficient information about study design, data collection, analysis, and interpretation to enable others to understand and potentially replicate the study. Transparency is particularly relevant in qualitative and interpretive research in the social sciences, where data sharing may be limited due to ethical or copyright considerations [@moravcsik2019transparency].\n\nWe now move on to some practical tips and tricks on how to implement transparent and well-documented research practices.\n\n# Organizing Projects  \n\nIn this section, we focus on what researchers can do to render their workflows more transparent, recoverable, and reproducible. \n\nA very easy-to-implement, yet powerful method for maintaining a tidy and transparent workflow relates to project management and organization. Below are some tips to consider when planning and organizing projects.\n\n## Folder Structures {-}\n\n![](/images/folderstructure2.png){ width=35% style=\"float:right; padding:10px\" }\n\nDifferent methods of organizing your folders have unique advantages and challenges, but they all share a reliance on a tree-structure hierarchy, where more general folders contain more specialized subfolders. For instance, if your goal is to locate any file with minimal clicks, an alphabetical folder structure might be effective. In this system, items are stored based on their initial letter (e.g., everything starting with a \"T\" like \"travel\" under \"T\", or everything related to \"courses\" under \"C\"). However, this method can be unintuitive as it groups completely unrelated topics together simply because they share the same initial letter.\n\nA more common and intuitive approach is to organize your data into meaningful categories that reflect different aspects of your life. For example:\n\n- **Work**: This can include subfolders like *Teaching* and *Research*.\n\n- **Personal**: This can encompass *Rent*, *Finances*, and *Insurances*.\n\n- **Media**: This might include *Movies*, *Music*, and *Audiobooks*.\n\nThis method not only makes it easier to locate files based on context but also keeps related topics grouped together, enhancing both accessibility and logical organization. \n\nTo further improve folder organization, consider the following best practices:\n\n1. **Consistency**: Use a consistent naming convention to avoid confusion.\n2. **Clarity**: Use clear and descriptive names for folders and files.\n3. **Date-Based Organization**: For projects that evolve over time, include dates in the folder names.\n4. **Regular Maintenance**: Periodically review and reorganize your folders to keep them tidy and relevant.\n\nFolders and files should be labeled in a meaningful and consistent way to avoid ambiguity and confusion. Avoid generic names like *Stuff* or *Document* for folders, and *doc2* or *homework* for files. Naming files consistently, logically, and predictably helps prevent disorganization, misplaced data, and potential project delays. A well-thought-out file naming convention ensures that files are:\n\n- **Easier to Process**: Team members won't have to overthink the file naming process, reducing cognitive load.\n- **Easier to Access, Retrieve, and Store**: A consistent naming convention facilitates quick and easy access to files.\n- **Easier to Browse Through**: Organized files save time and effort when searching through directories.\n- **Harder to Lose**: A logical structure makes it less likely for files to be misplaced.\n- **Easier to Check for Obsolete or Duplicate Records**: Systematic naming aids in identifying and managing outdated or redundant files.\n\nThe UQ Library offers the [Digital Essentials module Working with Files](https://web.library.uq.edu.au/research-tools-techniques/digital-essentials/working-with-files). This module contains information on storage options, naming conventions, back up options, metadata, and file formats. Some of these issues are dealt with below but the materials provided by the library offer a more extensive introduction into these topics.\n\nBy implementing these strategies, you can create a folder structure that is not only efficient but also scalable, accommodating both your current needs and future expansions.\n\n## Folders for Research and Teaching {-}\n\nHaving a standard folder structure can keep your files neat and tidy and save you time looking for data. It can also help if you are sharing files with colleagues and having a standard place to put working data and documentation.\n\nStore your projects in a separate folder. For instance, if you are creating a folder for a research project, create the project folder within a separate *project* folder that is within a *research* folder. If you are creating a folder for a course, create the course folder within a *courses* folder within a *teaching* folder, etc.\n\n![](/images/folderstructure.png){ width=35% style=\"float:right; padding:10px\" }\n\nWhenever you create a folder for a new project, try to have a set of standard folders. For example, when I create research project folders, I always have folders called *archive*, *data*, *docs*, and *images*. When I create course folders, I always have folders called *slides*, *assignments*, *exam*, *studentmaterials*, and *correspondence*. However, you are, of course, free to modify and come up or create your own basic project design. Also, by prefixing the folder names with numbers, you can force your files to be ordered by the steps in your workflow.\n\n* Having different sub folders allows you to avoid having too many files and many different file types in a single folder. Folders with many different files and file types tend to be chaotic and can be confusing. In addition, I have one ReadMe file on the highest level (which only contains folders except for this one single file) in which I describe very briefly what the folder is about and which folders contain which documents as well as some basic information about the folder (e.g. why and when I created it). This ReadMe file is intended both for me as a reminder what this folder is about and what it contains but also for others in case I hand the project over to someone else who continues the project or for someone who takes over my course and needs to use my materials.  \n\n## Shared Folder Structures {-}\n\nIf you work in a team or regularly share files and folders, establishing a logical structure for collaboration is essential. Here are key considerations for developing an effective team folder structure:\n\n1. **Pre-existing Agreements**: Before implementing a new folder structure, ensure there are no existing agreements or conventions in place. Collaborate with team members to assess the current system and identify areas for improvement.\n\n2. **Meaningful Naming**: Name folders in a way that reflects their contents and purpose. Avoid using staff names and opt for descriptive labels that indicate the type of work or project. This ensures clarity and accessibility for all team members.\n\n3. **Consistency**: Maintain consistency across the folder hierarchy to facilitate navigation and organization. Adhere to the agreed-upon structure and naming conventions to streamline workflows and minimize confusion.\n\n4. **Hierarchical Structure**: Organize folders hierarchically, starting with broad categories and gradually narrowing down to more specific topics. This hierarchical arrangement enhances organization and facilitates efficient file retrieval.\n\n5. **Differentiate Ongoing and Completed Work**: Differentiate between ongoing and completed work by segregating folders accordingly. As projects progress and accumulate files, separating older documents from current ones helps maintain clarity and focus.\n\n6. **Backup Solutions**: Implement robust backup solutions to safeguard against data loss in the event of a disaster. Utilize university-provided storage solutions or external backup services to ensure files are securely backed up and retrievable.\n\n7. **Post-Project Cleanup**: Conduct regular cleanup activities to remove redundant or obsolete files and folders post-project completion. This declutters the workspace, improves efficiency, and ensures that relevant data remains easily accessible.\n\nBy following these guidelines, teams can establish a cohesive and efficient folder structure that promotes collaboration, organization, and data integrity.\n\n<details>\n<summary>**GOING FURTHER**</summary>\n\n\n**For Beginners**\n\n* Pick some of your projects and illustrate how you currently organize your files. See if you can devise a better naming convention or note one or two improvements you could make to how you name your files.\n\n* There are some really good folder template shapes around. [Here is one](http://nikola.me/) you can download.\n\n**For Advanced Folder designers**\n\n* Come up with a policy for your team for folder structures. You could create a template and put it in a downloadable location for them to get them started.\n\n</details>\n\n\n\n\n\n## File Naming Convention (FNC) {-}\n\nOne of the most basic but also most important practices a researcher can do to improve the reproducibility and transparency of their research is to follow a consistent file naming convention. A File Naming Convention (FNC) is a systematic framework for naming your files in a way that clearly describes their contents and, importantly, how they relate to other files. Establishing an agreed-upon FNC before collecting data is essential as it ensures consistency, improves organization, and facilitates easier retrieval and collaboration. By establishing a clear and consistent File Naming Convention, you can significantly improve the efficiency and effectiveness of your data management practices, making it easier to handle, share, and preserve important information.\n\n![](/images/naming.png){ width=50% style=\"float:right; padding:10px\" }\n\nKey elements to consider when creating a File Naming Convention include:\n\n1. **Descriptive Names**: Use clear and descriptive names that provide information about the file’s content, purpose, and date. Avoid vague or generic names.\n\n2. **Consistency**: Apply the same naming format across all files to maintain uniformity. This includes using consistent date formats, abbreviations, and capitalization.\n\n3. **Version Control**: Incorporate version numbers or dates in the file names to track revisions and updates. For example, “ProjectReport_v1.0_2024-05-22.docx”.\n\n4. **Avoid Special Characters**: Use only alphanumeric characters and underscores or hyphens to avoid issues with different operating systems or software.\n\n5. **Length and Readability**: Keep file names concise yet informative. Avoid overly long names that may be difficult to read or cause problems with file path limitations.\n\n6. **Organizational Context**: Reflect the file’s place within the broader project or system. For example, use a prefix that indicates the department or project phase.\n\nExample of a File Naming Convention:\n```\n[ProjectName]_[DocumentType]_[Date]_[Version].[Extension]\n```\n**Example:**\n\n```\nClimateStudy_Report_20240522_v1.0.docx\n```\n\n![](/images/goodnaming.png){ width=35% style=\"float:right; padding:10px\" }\n\n\nHere are some additional hints for optimizing file naming:\n\n1. **Avoid Special Characters**: Special characters like +, !, \", -, ., ö, ü, ä, %, &, (, ), [, ], &, $, =, ?, ', #, or / should be avoided. They can cause issues with file sharing and compatibility across different systems. While underscores (_) are also special characters, they are commonly used for readability.\n\n2. **No White Spaces**: Some software applications replace or collapse white spaces, which can lead to problems. A common practice is to capitalize initial letters in file names to avoid white spaces (e.g., *TutorialIntroComputerSkills* or *Tutorial_IntroComputerSkills*).\n\n3. **Include Time-Stamps**: When adding dates to file names, use the YYYYMMDD format. This format ensures that files are easily sorted in chronological order. For example, use *TutorialIntroComputerSkills20230522* or *Tutorial_IntroComputerSkills_20230522*.\n\nBenefits of a robust File Naming Convention include:\n\n- **Enhanced Organization**: Files are easier to categorize and locate.\n- **Improved Collaboration**: Team members can understand and navigate the file structure more efficiently.\n- **Consistency and Standardization**: Reduces errors and confusion, ensuring that everyone follows the same system.\n- **Streamlined Data Management**: Simplifies the process of managing large volumes of data.\n\nFor comprehensive guidance, the University of Edinburgh provides a detailed list of [13 Rules for File Naming Conventions](https://www.ed.ac.uk/records-management/guidance/records/practical-guidance/naming-conventions) with examples and explanations. Additionally, the Australian National Data Service (ANDS) offers a useful [guide on file wrangling](https://www.ands.org.au/working-with-data/data-management/file-wrangling), summarized below.\n\n\n# Data Handling and Management \n\nThe following practical tips and tricks focus on data handling and provide guidance to avoid data loss.\n\n## Keeping copies and the 3-2-1 Rule{-}\n\n![](/images/copiesrule.jpg){ width=50% style=\"float:right; padding:10px\" }\n\nKeeping a copy of all your data (working, raw, and completed) both in the cloud (recommended) and on your computer is incredibly important. This ensures that if you experience a computer failure, accidentally delete your data, or encounter data corruption, your research remains recoverable and restorable.\n\nWhen working with and processing data, it is also extremely important to always keep at least one copy of the original data. The original data should never be deleted; instead, you should copy the data and delete only sections of the copy while retaining the original data intact.\n\nThe 3-2-1 backup rule has been developed as a guide against data loss [@mcmaster2021data]. According to this rule, one should strive to have at least three copies of your project stored in different locations. Specifically, maintain at least three (3) copies of your data, storing backup copies on two (2) different storage media, with one (1) of them located offsite. While this guideline may vary depending on individual preferences, I personally adhere to this approach for safeguarding my projects.\n\n![](/images/homercopies.jpg){ width=30% style=\"float:right; padding:10px\" }\n\n* on my personal notebook\n\n* on at least one additional hard drive (that you keep in a secure location)\n\n* in an online repository (for example, UQ's [*Research Data Management system (RDM)*](https://research.uq.edu.au/rmbt/uqrdm) *OneDrive*, *MyDrive*, *GitHub*, or *GitLab*)\n\nUsing online repositories ensures that you do not lose any data in case your computer crashes (or in case you spill lemonade over it - don't ask...) but it comes at the cost that your data can be more accessible to (criminal or other) third parties. Thus, if you are dealing with sensitive data, I suggest to store it on an additional external hard drive and do not keep cloud-based back-ups. If you trust tech companies with your data (or think that they are not interested in stealing your data), cloud-based solutions such as *OneDrive*, Google's *MyDrive*, or *Dropbox* are ideal and easy to use options (however,  [UQ's RDM](https://research.uq.edu.au/rmbt/uqrdm) is a safer option). \n\nThe UQ library also offers additional information on complying with ARC and NHMRC data management plan requirements and that [UQ RDM](https://research.uq.edu.au/rmbt/uqrdm) meets these requirements for sensitive data (see [here](https://guides.library.uq.edu.au/for-researchers/uq-research-data-manager/faqs-complying-with-policy-and-requirements)).\n\n<details>\n<summary>**GOING FURTHER**</summary>\n\n\n**For Beginners**\n\n* Get your data into [UQ's RDM](http://rdm.uq.edu.au/) or Cloud Storage - If you need help, talk to the library or your tech/eResearch/QCIF Support\n\n**For Advanced backupers**\n\n* Build a policy for your team or group on where things are stored. Make sure the location of your data is saved in your documentation\n\n</details>\n\n\n\n## Dealing with Sensitive Data {-}\n\nThis section will elaborate on who to organize and handle (research) data and introduce some basic principles that may help you to keep your data tidy.\n\n\n\n**Tips for sensitive data**\n\n* Sensitive data are data that can be used to identify an individual, species, object, or location that introduces a risk of discrimination, harm, or unwanted attention. Major, familiar categories of sensitive data are: personal data - health and medical data - ecological data that may place vulnerable species at risk.\n\n**Separating identifying variables from your data**\n\n* Separating or deidentifying your data has the purpose to protect an individual's privacy. According to the Australian Privacy Act 1988, \"personal information is deidentified if the information is no longer about an identifiable individual or an individual who is reasonably identifiable\". Deidentified information is no longer considered personal information and can be shared. More information on the Commonwealth Privacy Act can be located [here](https://www.legislation.gov.au/Details/C2016C00979).\n\n* Deidentifying aims to allow data to be used by others for publishing, sharing and reuse without the possibility of individuals/location being re-identified. It may also be used to protect the location of archaeological findings, cultural data of location of endangered species.\n\n* Any identifiers (name, date of birth, address or geospatial locations etc) should be removed from main data set and replaced with a code/key. The code/key is then preferably encrypted and stored separately. By storing deidentified data in a secure solution, you are meeting safety, controlled, ethical, privacy and funding agency requirements.\n\n* Re-identifying an individual is possible by recombining the deidentifiable data set and the identifiers.\n\n## Managing Deidentification (ARDC) {-}\n\n* Plan deidentification early in the research as part of your data management planning\n\n* Retain original unedited versions of data for use within the research team and for preservation\n\n* Create a deidentification log of all replacements, aggregations or removals made\n\n* Store the log separately from the deidentified data files\n\n* Identify replacements in text in a meaningful way, e.g. in transcribed interviews indicate replaced text with [brackets] or use XML mark-up tags.\n\n**Management of identifiable data (ARDC)**\n\nData may often need to be identifiable (i.e. contains personal information) during the process of research, e.g. for analysis. If data is identifiable then ethical and privacy requirements can be met through access control and data security. This may take the form of:\n\n* Control of access through physical or digital means (e.g. passwords)\n\n* Encryption of data, particularly if it is being moved between locations\n\n* Ensuring data is not stored in an identifiable and unencrypted format when on easily lost items such as USB keys, laptops and external hard drives.\n\n* Taking reasonable actions to prevent the inadvertent disclosure, release or loss of sensitive personal information.\n\n<details>\n<summary>**Safely sharing sensitive data guide (ARDC)**</summary> \n\n* ANDS' Deidentification Guide collates a selection of Australian and international practical guidelines and resources on how to deidentify data sets. You can find more information about deidentification [here](https://www.ands.org.au/__data/assets/pdf_file/0003/737211/De-identification.pdf) and information about safely sharing sensitive data [here](https://www.ands.org.au/working-with-data/sensitive-data/sharing-sensitive-data).\n\n</details>\n\n\n<details>\n<summary>**Australian practical guidance for Deidentification (ARDC)**</summary>\n\n* Australian Research Data Commons (ARDC) formerly known as Australian National Data Service (ANDS) released a fabulous guide on Deidentification. The Deidentification guide is intended for researchers who own a data set and wish to share safely with fellow researchers or for publishing of data. The guide can be located [here](https://www.ands.org.au/working-with-data/sensitive-data/de-identifying-data).\n\n</details>\n\n<details>\n<summary>**Nationally available guidelines for handling sensitive data** </summary> \n\n* The *Australian Government’s Office of the Australian Information Commissioner* (OAIC) and CSIRO Data61 have released a *Deidentification Decision Making Framework*, which is a “practical guide to deidentification, focusing on operational advice”. The guide will assist organisations that handle personal information to deidentify their data effectively.\n\n* The OAIC also provides [high-level guidance](https://www.oaic.gov.au/agencies-and-organisations/guides/de-identification-and-the-privacy-act) on deidentification of data and information, outlining what deidentification is, and how it can be achieved. \n\n* The [Australian Government’s guidelines for the disclosure of health information](https://www.aihw.gov.au/reports-data), includes techniques for making a data set non-identifiable and example case studies. \n\n* Australian Bureau of Statistics’ National Statistical Service Handbook. Chapter 11 contains a summary of methods to maintain privacy.\n\n* med.data.edu.au gives [information about anonymisation](https://www.aihw.gov.au/reports-data) \n\n* The Office of the Information Commissioner Queensland’s guidance on deidentification techniques can be found [here](https://www.oic.qld.gov.au/guidelines/for-government/guidelines-privacy-principles/anonymity/privacy-and-de-identification)\n\n</details>\n\n## Data as publications{-}\n\nMore recently, regarding data as a form of publications has gain a lot of traction. This has the advantage that it rewards researchers who put a lot of work into compiling data and it has created an incentive for making data available, e.g. for replication. The UQ RDM and UQ eSpace can help with the [process of publishing a dataset](https://guides.library.uq.edu.au/publish-a-dataset-with-uqrdm-and-uq-espace).\n\nThere are many platforms where data can be published and made available in a sustainable manner. Below are listed just some options that are recommendable:\n\n![](/images/rdm.png){ width=30% style=\"float:right; padding:10px\" }\n\n\n<details>\n<summary>**UQ Research Data Manager**</summary>\n\nThe [UQ Research Data Manager](https://research.uq.edu.au/rmbt/uqrdm) (RDM) system is a robust, world-leading system designed and developed here at UQ. The UQ RDM provides the UQ research community  with a collaborative, safe and secure large-scale storage facility to practice good stewardship of research data. The European Commission report \"Turning FAIR into Reality\" cites UQ's RDM as an exemplar of, and approach to, good research data management practice. The disadvantage of RDM is that it is not available to everybody but restricted to UQ staff, affiliates, and collaborators.\n\n</details>\n\n<details>\n<summary>**Open Science Foundation**</summary>\n\nThe [Open Science Foundation](https://osf.io/) (OSF) is a free, global open platform to support your research and enable collaboration.\n\n</details>\n\n<details>\n<summary>**TROLLing**</summary>\n\n[TROLLing | DataverseNO](https://dataverse.no/dataverse/trolling) (*The Tromsø Repository of Language and Linguistics*) is a repository of data, code, and other related materials used in linguistic research. The repository is open access, which means that all information is available to everyone. All postings are accompanied by searchable metadata that identify the researchers, the languages and linguistic phenomena involved, the statistical methods applied, and scholarly publications based on the data (where relevant).\n\n</details>\n\n<details>\n<summary>**Git**</summary>\n\n[GitHub](https://github.com/) offers the distributed version control using Git. While GitHub is not designed to host research data, it can be used to share share small collections of research data and make them available to the public. The size restrictions and the fact that GitHub is a commercial enterprise owned by Microsoft are disadvantages of this as well as alternative, but comparable platforms such as [GitLab](https://about.gitlab.com/).\n\n</details>\n\n## Software {-}\n\nUsing free, open-source software for data processing and analysis, such as Praat, R, Python, or Julia, promotes transparency and reproducibility by reducing financial access barriers and enabling broader audiences to conduct analyses. Open-source tools provide a transparent and accessible framework for conducting analyses, allowing other researchers to replicate and validate results while eliminating access limitations present in commercial tools, which may not be available to researchers from low-resource regions [see @heron2013open for a case-study on the use of free imaging software].\n\nIn contrast, employing commercial tools or multiple tools in a single analysis can hinder transparency and reproducibility. Switching between tools often requires time-consuming manual input and may disadvantage researchers from low-resource regions who may lack access to licensed software tools. While free, open-source tools are recommended for training purposes, they may have limitations in functionality [@heron2013open, 7/36].\n\n\n\n# Documentation\n\nDocumentation involves meticulously recording your work so that others—or yourself at a later date—can easily understand what you did and how you did it. This practice is crucial for maintaining clarity and continuity in your projects. As a general rule, you should document your work with the assumption that you are instructing someone else on how to navigate your files and processes on your computer.\n\n## Efficient Documentation {-}\n\n1. **Be Clear and Concise**: Write in a straightforward and concise manner. Avoid jargon and complex language to ensure that your documentation is accessible to a wide audience.\n   \n2. **Include Context**: Provide background information to help the reader understand the purpose and scope of the work. Explain why certain decisions were made.\n   \n3. **Step-by-Step Instructions**: Break down processes into clear, sequential steps. This makes it easier for someone to follow your workflow.\n   \n4. **Use Consistent Formatting**: Consistency in headings, fonts, and styles improves readability and helps readers quickly find the information they need.\n   \n5. **Document Locations and Structures**: Clearly describe where files are located and the structure of your directories. Include details on how to navigate through your file system.\n   \n6. **Explain File Naming Conventions**: Detail your file naming conventions so others can understand the logic behind your organization and replicate it if necessary.\n   \n7. **Update Regularly**: Documentation should be a living document. Regularly update it to reflect changes and new developments in your project.\n\n**Example**\n\nIf you were documenting a data analysis project, your documentation might include:\n\n- **Project Overview**: A brief summary of the project's objectives, scope, and outcomes.\n- **Directory Structure**: An explanation of the folder organization and the purpose of each directory.\n- **Data Sources**: Descriptions of where data is stored and how it can be accessed.\n- **Processing Steps**: Detailed steps on how data is processed, including code snippets and explanations.\n- **Analysis Methods**: An overview of the analytical methods used and the rationale behind their selection.\n- **Results**: A summary of the results obtained and where they can be found.\n- **Version Control**: Information on how the project is version-controlled, including links to repositories and branches.\n\nBy following these best practices, your documentation will be comprehensive and user-friendly, ensuring that anyone who needs to understand your work can do so efficiently. This level of detail not only aids in collaboration but also enhances the reproducibility and transparency of your projects.\n\n![](/images/busfactor.png){ width=50% style=\"float:right; padding:10px\" }\n\n## Documentation and the Bus Factor {-}\n\nDocumentation is not just about where your results and data are saved; it encompasses a wide range of forms depending on your needs and work style. Documenting your processes can include photos, word documents with descriptions, or websites that detail how you work.\n\nThe concept of documentation is closely linked to the *Bus Factor* [@jabrayilzade2022bus] — a measure of how many people on a project need to be unavailable (e.g., hit by a bus) for the project to fail. Many projects have a bus factor of one, meaning that if the key person is unavailable, the project halts. Effective documentation raises the bus factor, ensuring that the project can continue smoothly if someone suddenly leaves or is unavailable.\n\nIn collaborative projects, having a log of where to find relevant information and who to ask for help is particularly useful. Ideally, documentation should cover everything that a new team member needs to know. The perfect person to create this log is often the last person who joined the project, as they can provide fresh insights into what information is most needed.\n\n\n## Creating an Onboarding Log {-}\n\nIf you haven't created a log for onboarding new team members, it's highly recommended. This log should be stored in a ReadMe document or folder at the top level of the project directory. This ensures that essential information is easily accessible to anyone who needs it.\n\nBy documenting thoroughly and effectively, you improve the resilience and sustainability of your project, making it less dependent on any single individual and enhancing its overall robustness.\n\n\n<details>\n<summary>**GOING FURTHER**</summary>\n\n**For Beginners**\n\n* Read this first: [How to start Documenting and more by CESSDA ERIC](https://www.cessda.eu/Training/Training-Resources/Library/Data-Management-Expert-Guide/2.-Organise-Document/Documentation-and-metadata)\n\n* Start with documenting in a text file or document- any start is a good start\n\n* Have this document automatically synced to the cloud with your data or keep this in a shared place such as *Google docs*, *Microsoft teams*, or *Owncloud*. If you collaborate on a project and use UQ’s RDM, you should store a copy of your documentation there.\n\n**For Intermediates**\n\n* Once you have the basics in place, go into detail on how your workflow goes from your raw data to the finished results. This can be anything from a detailed description of how you analyse your data, over R Notebooks, to downloaded function lists from Virtual Lab.\n\n**For Advanced documentarians**\n\n* Learn about Git Repositories and wikis.\n\n</details>\n\n\n## Reproducible reports and notebooks {-}\n\n\n\nNotebooks seamlessly combine formatted text with executable code (e.g., R or Python) and display the resulting outputs, enabling researchers to trace and understand every step of a code-based analysis. This integration is facilitated by markdown, a lightweight markup language that blends the functionalities of conventional text editors like Word with programming interfaces. Jupyter notebooks [@perez2015jupyter] and R notebooks [@xie2015r] exemplify this approach, allowing researchers to interleave explanatory text with code snippets and visualize outputs within the same document. This cohesive presentation enhances research reproducibility and transparency by providing a comprehensive record of the analytical process, from code execution to output generation.\n\n![](/images/notebook_raw.png){ width=100% style=\"float:right; padding:10px\" }\n\nNotebooks offer several advantages for facilitating transparent and reproducible research in corpus linguistics. They have the capability to be rendered into PDF format, enabling easy sharing with reviewers and fellow researchers. This allows others to scrutinize the analysis process step by step. Additionally, the reporting feature of notebooks permits other researchers to replicate the same analysis with minimal effort, provided that the necessary data is accessible. As such, notebooks provide others with the means to thoroughly understand and replicate an analysis at the click of a button [@msch2025repro].\n\n![](/images/notebook_rendered.png){ width=100% style=\"float:right; padding:10px\" }\n\nFurthermore, while notebooks are commonly used for documenting quantitative and computational analyses, recent studies have demonstrated their efficacy in rendering qualitative and interpretative work in corpus pragmatics [@msch2025repro] and corpus-based discourse analysis [see @msch2024corpus] more transparent. Especially interactive notebooks (but also traditional, non-interactive notebooks) enhance accountability by facilitating data exploration and enabling others to verify the reliability and accuracy of annotation schemes.\n\nSharing notebooks offers an additional advantage compared to sharing files containing only code. While code captures the logic and instructions for analysis, it lacks the output generated by the code, such as visualizations or statistical models. Reproducing analyses solely from code necessitates specific coding expertise and replicating the software environment used for the original analysis. This process can be challenging, particularly for analyses reliant on diverse software applications, versions, and libraries, especially for researchers lacking strong coding skills. In contrast, rendered notebooks display both the analysis steps and the corresponding code output, eliminating the need to recreate the output locally. Moreover, understanding the code in the notebook typically requires only basic comprehension of coding concepts, enabling broader accessibility to the analysis process.\n\n\n## Version control (Git){-}\n\n\n\nImplementing version control systems, such as Git, helps track changes in code and data over time. The primary issue that version control applications address is the dependency of analyses on specific versions of software applications. What may have worked and produced a desired outcome with one version of a piece of software may no longer work with another version. Thus, keeping track of versions of software packages is crucial for sustainable reproducibility. Additionally, version control extends to tracking different versions of reports or analytic steps, particularly in collaborative settings [@blischak2016quick]. \n\n![](/images/gitlogo.png){ width=50% style=\"float:right; padding:10px\" }\n\nVersion control facilitates collaboration by allowing researchers to revert to previous versions if necessary and provides an audit trail of the data processing, analysis, and reporting steps. It enhances transparency by capturing the evolution of the research project. Version control systems, such as Git, can be utilized to track code changes and facilitate collaboration [@blischak2016quick].\n\n\n\nRStudio has built-in version control and also allows direct connection of projects to GitHub repositories. GitHub is a web-based platform and service that provides a collaborative environment for software development projects. It offers version control using Git, a distributed version control system, allowing developers to track changes to their code, collaborate with others, and manage projects efficiently. GitHub also provides features such as issue tracking, code review, and project management tools, making it a popular choice for both individual developers and teams working on software projects.\n\nUploading and sharing resources (such as notebooks, code, annotation schemes, additional reports, etc.) on repositories like GitHub (https://github.com/) [@beer2018introducing] ensures long-term preservation and accessibility, thereby ensuring that the research remains available for future analysis and verification. By openly sharing research materials on platforms like GitHub, researchers enable others to access and scrutinize their work, thereby promoting transparency and reproducibility.\n\n## Digital Object Identifier (DOI) and Persistent identifier (PiD){-}\n\nOnce you've completed your project, help make your research data discoverable, accessible and possibly re-usable using a PiD such as a DOI! A [Digital Object Identifier (DOI)](https://www.doi.org/) is a unique alphanumeric string assigned by either a publisher, organisation or agency that identifies content and provides a PERSISTENT link to its location on the internet, whether the object is digital or physical. It might look something like this http://dx.doi.org/10.4225/01/4F8E15A1B4D89. \n\n![](/images/doi.png){ width=20% style=\"float:right; padding:10px\" }\n\nDOIs are also considered a type of persistent identifiers (PiDs). An identifier is any label used to name some thing uniquely (whether digital or physical). URLs are an example of an identifier. So are serial numbers, and personal names. A persistent identifier is guaranteed to be managed and kept up to date over a defined time period.\n\nJournal publishers assign DOIs to electronic copies of individual articles. DOIs can also be assigned by an organisation, research institutes or agencies and are generally managed by the relevant organisation and relevant policies. DOIs not only uniquely identify research data collections, it also supports citation and citation metrics.\n\nA DOI will also be given to any data set published in UQ eSpace, whether added manually or uploaded from [UQ RDM](https://research.uq.edu.au/rmbt/uqrdm). For information on how cite data, have a look [here](https://web.library.uq.edu.au/node/4128/5#5).\n\n**Key points**\n\n* DOIs are a persistent identifier and as such carry expectations of curation, persistent access and rich metadata\n\n* DOIs can be created for DATA SETS and associated outputs (e.g. grey literature, workflows, algorithms, software etc) - DOIs for data are equivalent with DOIs for other scholarly publications\n\n* DOIs enable accurate data citation and bibliometrics (both metrics and altmetrics)\n\n* Resolvable DOIs provide easy online access to research data for discovery, attribution and reuse\n\n<details>\n<summary>**GOING FURTHER**</summary>\n\n\n**For Beginners** \n\n* Ensure data you associate with a publication has a DOI- your library is the best group to talk to for this.\n\n**For Intermediates**\n\n* Learn more about how your DOI can potentially increase your citation rates by watching this 4m:51s [video](https://www.youtube.com/watch?v=PgqtiY7oZ6k&feature=youtu.be)\n\n* Learn more about how your DOI can potentially increase your citation rate by reading the [ANDS Data Citation Guide](https://www.ands.org.au/guides/data-citation-awareness)\n\n**For Advanced identifiers**\n\n* Learn more about [PiDs and DOIs](https://www.ands.org.au/guides/persistent-identifiers-awareness)\n\n* Contact the Library for advice on how to obtain a DOI upon project completion.\n\n* Have a look at [ANDS/ARDC - Citation and Identifiers](https://www.ands.org.au/working-with-data/citation-and-identifiers)\n\n* Check out the [DOI system for research data](https://www.ands.org.au/guides/doi)\n\n</details>\n\n# Optimizing R Workflows\n\nWhile most researchers in the language sciences are somewhat familiar with R, workshops focusing on specific tasks, such as statistical analyses in R, are increasingly common. However, workshops dedicated to general proficiency in R are rare.\n\n![](/images/rstudiologo.png){ width=40% style=\"float:right; padding:10px\" }\n\nWhen discussing 'working in R,' I refer to concerns surrounding reproducible and efficient workflows, session management, and adherence to formatting conventions for R code. The subsequent sections will offer guidance on optimizing workflows and enhancing research practices to foster transparency, efficiency, and reproducibility.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Rproj{-}\n\nIf you're utilizing RStudio, you can create a new R project, which is essentially a working directory identified by a `.RProj` file. When you open a project (either through 'File/Open Project' in RStudio or by double-clicking on the `.RProj` file outside of R), the working directory is automatically set to the location of the `.RProj` file.\n\n![](/images/rproj.png){ width=40% style=\"float:right; padding:10px\" }\n\nI highly recommend creating a new R Project at the outset of each research endeavor. Upon creating a new R project, promptly organize your directory by establishing folders to house your R code, data files, notes, and other project-related materials. This can be done outside of R on your computer or within the Files window of RStudio. For instance, consider creating a 'R' folder for your R code and a 'data' folder for your datasets.\n\nPrior to adopting R Projects, I used `setwd()` to set my working directory. However, this method has drawbacks as it requires specifying an absolute file path, which can lead to broken scripts and hinder collaboration and reproducibility efforts. Consequently, reliance on `setwd()` impedes the sharing and transparency of analyses and projects. By contrast, utilizing R Projects streamlines workflow management and facilitates reproducibility and collaboration.\n\n\n## Dependency Control (renv) {-}\n\n![](/images/renv.png){ width=40% style=\"float:right; padding:10px\" }\n\nThe `renv` package introduces a novel approach to enhancing the independence of R projects by eliminating external dependencies. By creating a dedicated library within your project, `renv` ensures that your R project operates autonomously from your personal library. Consequently, when sharing your project, the associated packages are automatically included.\n\n`renv` aims to provide a robust and stable alternative to the `packrat` package, which, in my experience, fell short of expectations. Having utilized `renv` myself, I found it to be user-friendly and reliable. Although the initial generation of the local library may require some time, it seamlessly integrates into workflows without causing any disruptions. Overall, `renv` is highly recommended for simplifying the sharing of R projects, thereby enhancing transparency and reproducibility.\n\nOne of `renv`'s core principles is to preserve existing workflows, ensuring that they function as before while effectively isolating the R dependencies of your project, including package versioning.\n\nFor more information on `renv` and its functionalities, as well as guidance on its implementation, refer to the [official documentation](https://rstudio.github.io/renv/articles/renv.html).\n\n\n## Version Control with Git{-}\n\n![](/images/gitgithub.png){ width=40% style=\"float:right; padding:10px\" }\n\n**Getting started with Git**\n\nTo connect your Rproject with GitHub, **you need to have Git installed** (if you have not yet downloaded and installed Git, simply search for `download git` in your favorite search engine and follow the instructions) and **you need to have a GitHub account**. If you do not have a GitHub account, [here](https://www.youtube.com/watch?v=pYTifWe6M8I) is a video tutorial showing how you can do this. If you have trouble with this, you can also check out *Happy Git and GitHub for the useR* at `happygitwithr.com`. \n\n\n![](/images/gitdownload.png){ width=40% style=\"float:right; padding:10px\" }\n\n\nJust as a word of warning: when I set up my connection to Git and GitHUb things worked very differently, so things may be a bit different on your machine. In any case, I highly recommend [this YouTube tutorial](https://www.youtube.com/watch?v=r5_v5f6128M) which shows how to connect to Git and GitHub using the `usethis` package or [this, slightly older, YouTube  tutorial](https://www.youtube.com/watch?v=kL6L2MNqPHg&t=716s) on how to get going with Git and GitHub when working with RStudio.\n\n**Old school**\n\nWhile many people use the `usethis` package to connect RStudio to GitHub, I still use a somewhat *old school* way to connect my projects with GitHub. I have decided to show you how to connect RStudio to GitHub using this method, as I actually think it is easier once you have installed Git and created a gitHub account.\n\nBefore you can use Git with R, you need to tell RStudio that you want to use Git. To do this, go to `Tools`, then `Global Options` and then to `Git/SVN` and make sure that the box labeled `Enable version control interface for RStudio projects.` is checked. You need to then browse to the Git executable file (for Window's users this is called the `Git.exe` file). \n\n<br>\n\n![](/images/globaloptionsr.png){ width=95% style=\"float:right; padding:10px\" }\n\n\n<br>\n\nNow, we can connect our project to Git (not to GitHub yet). To do this, go to `Tools`, then to `Project Options...` and in the `Git/SVN` tab, change `Version Control System` to `Git` (from `None`). Once you have accepted these changes, a new tab called `Git` appears in the upper right pane of RStudio (*you may need to / be asked to restart RStudio at this point*).  You can now commit files and changes in files to Git. \n\n![](/images/globaloptionsgit.png){ width=50% style=\"float:right; padding:10px\" }\n\nTo commit files, go to the Git tab and check the boxes next to the files you would like to commit (this is called *staging*; meaning that these files are now ready to be committed). Then, click on `Commit` and enter a message in the pop-up window that appears. Finally, click on the `commit` button under the message window.\n\n\n**Connecting your Rproj with GitHub**\n\nTo integrate your R project with GitHub, start by navigating to your GitHub page and create a new repository (repo). You can name it anything you like; for instance, let's call it `test`. To create a new repository on GitHub, simply click on the `New` icon and then select `New Repository`. While creating the repository, I recommend checking the option to 'Add a README', where you can provide a brief description of the contents, although it's not mandatory.\n\nOnce you've created the GitHub repo, the next step is to connect it to your local computer. This is achieved by 'cloning' the repository. Click on the green `Code` icon on your GitHub repository page, and from the dropdown menu that appears, copy the URL provided under the `clone with HTTPS` section.\n\nNow, open your terminal (located between `Console` and `Jobs` in RStudio) and navigate to the directory where you want to store your project files. Use the `cd` command to change directories if needed. Once you're in the correct directory, include the URL you copied from the git repository after the command `git remote add origin`. This sets up the connection between your local directory and the GitHub repository.\n\nNext, execute the command `git branch -M main` to rename the default branch to `main`. This step is necessary to align with recent changes in GitHub's naming conventions, merging the previous `master` and `main` branches.\n\nFinally, push your local files to the remote GitHub repository by using the command `git push -u origin main`. This command uploads your files to GitHub, making them accessible to collaborators and ensuring version control for your project.\n\nFollowing these steps ensures seamless integration between your R project and GitHub, facilitating collaboration, version control, and project management.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# initiate the upstream tracking of the project on the GitHub repo\ngit remote add origin https://github.com/YourGitHUbUserName/YouGitHubRepositoryName.git\n# set main as main branch (rather than master)\ngit branch -M main\n# push content to main\ngit push -u origin main\n```\n:::\n\n\n\nWe can then commit changes and push them to the remote GitHub repo.\n\nYou can then go to your GitHub repo and check if the documents that we pushed are now in the remote repo.\n\nFrom now on, you can simply commit all changes that you make to the GitHub repo associated with that Rproject. Other projects can, of course, be connected and push to other GitHub repos.\n\n\n## Solving path issues: here {-}\n\nThe primary objective of the here package is to streamline file referencing within project-oriented workflows. Unlike the conventional approach of using setwd(), which is susceptible to fragility and heavily reliant on file organization, here leverages the top-level directory of a project to construct file paths effortlessly.\n\nThis approach significantly enhances the robustness of your projects, ensuring that file paths remain functional even if the project is relocated or accessed from a different computer. Moreover, the here package mitigates compatibility issues when transitioning between different operating systems, such as Mac and Windows, which traditionally require distinct path specifications.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# define path\nexample_path_full <- \"D:\\\\Uni\\\\Konferenzen\\\\ISLE\\\\ISLE_2021\\\\isle6_reprows/repro.Rmd\"\n# show path\nexample_path_full\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"D:\\\\Uni\\\\Konferenzen\\\\ISLE\\\\ISLE_2021\\\\isle6_reprows/repro.Rmd\"\n```\n\n\n:::\n:::\n\n\n\nWith the `here` package, the path starts in folder where the Rproj file is. As the Rmd file is in the same folder, we only need to specify the Rmd file and the `here` package will add the rest.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load package\nlibrary(here)\n# define path using here\nexample_path_here <- here::here(\"repro.Rmd\")\n#show path\nexample_path_here\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/Users/laurenceanthony/Documents/projects/SLCLADAL.github.io/repro.Rmd\"\n```\n\n\n:::\n:::\n\n\n\n\n## Reproducible randomness: set.seed{-}\n\nThe `set.seed` function in R sets the seed of R‘s random number generator, which is useful for creating simulations or random objects that can be reproduced. This means that when you call a function that uses some form of randomness (e.g. when using random forests), using the `set.seed` function allows you to replicate results. \n\nBelow is an example of what I mean. First, we generate a random sample from a vector.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumbers <- 1:10\nrandomnumbers1 <- sample(numbers, 10)\nrandomnumbers1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  4  6  3  7  8  9 10  5  2  1\n```\n\n\n:::\n:::\n\n\n\nWe now draw another random sample using the same `sample` call. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrandomnumbers2 <- sample(numbers, 10)\nrandomnumbers2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 10  2  9  4  1  6  8  5  7  3\n```\n\n\n:::\n:::\n\n\n\nAs you can see, we now have a different string of numbers although we used the same call. However, when we set the seed and then generate a string of numbers as show below, we create a reproducible random sample.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nrandomnumbers3 <- sample(numbers, 10)\nrandomnumbers3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  3 10  2  8  6  9  1  7  5  4\n```\n\n\n:::\n:::\n\n\n\nTo show that we can reproduce this sample, we call the same seed and then generate another random sample which will be the same as the previous one because we have set the seed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nrandomnumbers4 <- sample(numbers, 10)\nrandomnumbers4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  3 10  2  8  6  9  1  7  5  4\n```\n\n\n:::\n:::\n\n\n\n\n## Tidy data principles{-}\n\nThe same (underlying) data can be represented in multiple ways. The following three tables are show the same data but in different ways.\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed table-responsive\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Table 1.</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> country </th>\n   <th style=\"text-align:left;\"> continent </th>\n   <th style=\"text-align:right;\"> 2002 </th>\n   <th style=\"text-align:right;\"> 2007 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Afghanistan </td>\n   <td style=\"text-align:left;\"> Asia </td>\n   <td style=\"text-align:right;\"> 42.129 </td>\n   <td style=\"text-align:right;\"> 43.828 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Australia </td>\n   <td style=\"text-align:left;\"> Oceania </td>\n   <td style=\"text-align:right;\"> 80.370 </td>\n   <td style=\"text-align:right;\"> 81.235 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> China </td>\n   <td style=\"text-align:left;\"> Asia </td>\n   <td style=\"text-align:right;\"> 72.028 </td>\n   <td style=\"text-align:right;\"> 72.961 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Germany </td>\n   <td style=\"text-align:left;\"> Europe </td>\n   <td style=\"text-align:right;\"> 78.670 </td>\n   <td style=\"text-align:right;\"> 79.406 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tanzania </td>\n   <td style=\"text-align:left;\"> Africa </td>\n   <td style=\"text-align:right;\"> 49.651 </td>\n   <td style=\"text-align:right;\"> 52.517 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed table-responsive\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Table 2.</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> year </th>\n   <th style=\"text-align:right;\"> Afghanistan (Asia) </th>\n   <th style=\"text-align:right;\"> Australia (Oceania) </th>\n   <th style=\"text-align:right;\"> China (Asia) </th>\n   <th style=\"text-align:right;\"> Germany (Europe) </th>\n   <th style=\"text-align:right;\"> Tanzania (Africa) </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 2002 </td>\n   <td style=\"text-align:right;\"> 42.129 </td>\n   <td style=\"text-align:right;\"> 80.370 </td>\n   <td style=\"text-align:right;\"> 72.028 </td>\n   <td style=\"text-align:right;\"> 78.670 </td>\n   <td style=\"text-align:right;\"> 49.651 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2007 </td>\n   <td style=\"text-align:right;\"> 43.828 </td>\n   <td style=\"text-align:right;\"> 81.235 </td>\n   <td style=\"text-align:right;\"> 72.961 </td>\n   <td style=\"text-align:right;\"> 79.406 </td>\n   <td style=\"text-align:right;\"> 52.517 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed table-responsive\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Table 3.</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> country </th>\n   <th style=\"text-align:right;\"> year </th>\n   <th style=\"text-align:left;\"> continent </th>\n   <th style=\"text-align:right;\"> lifeExp </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Afghanistan </td>\n   <td style=\"text-align:right;\"> 2002 </td>\n   <td style=\"text-align:left;\"> Asia </td>\n   <td style=\"text-align:right;\"> 42.129 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Afghanistan </td>\n   <td style=\"text-align:right;\"> 2007 </td>\n   <td style=\"text-align:left;\"> Asia </td>\n   <td style=\"text-align:right;\"> 43.828 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Australia </td>\n   <td style=\"text-align:right;\"> 2002 </td>\n   <td style=\"text-align:left;\"> Oceania </td>\n   <td style=\"text-align:right;\"> 80.370 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Australia </td>\n   <td style=\"text-align:right;\"> 2007 </td>\n   <td style=\"text-align:left;\"> Oceania </td>\n   <td style=\"text-align:right;\"> 81.235 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> China </td>\n   <td style=\"text-align:right;\"> 2002 </td>\n   <td style=\"text-align:left;\"> Asia </td>\n   <td style=\"text-align:right;\"> 72.028 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> China </td>\n   <td style=\"text-align:right;\"> 2007 </td>\n   <td style=\"text-align:left;\"> Asia </td>\n   <td style=\"text-align:right;\"> 72.961 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Germany </td>\n   <td style=\"text-align:right;\"> 2002 </td>\n   <td style=\"text-align:left;\"> Europe </td>\n   <td style=\"text-align:right;\"> 78.670 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Germany </td>\n   <td style=\"text-align:right;\"> 2007 </td>\n   <td style=\"text-align:left;\"> Europe </td>\n   <td style=\"text-align:right;\"> 79.406 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tanzania </td>\n   <td style=\"text-align:right;\"> 2002 </td>\n   <td style=\"text-align:left;\"> Africa </td>\n   <td style=\"text-align:right;\"> 49.651 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tanzania </td>\n   <td style=\"text-align:right;\"> 2007 </td>\n   <td style=\"text-align:left;\"> Africa </td>\n   <td style=\"text-align:right;\"> 52.517 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nTable 3 should be the easiest to parse and understand. This is so because only Table 3 is *tidy*. Unfortunately, however, most data that you will encounter will be untidy. There are two main reasons:\n\n* Most people aren’t familiar with the principles of tidy data, and it’s hard to derive them yourself unless you spend a lot of time working with data.\n\n* Data is often organised to facilitate some use other than analysis. For example, data is often organised to make entry as easy as possible.\n\nThis means that for most real analyses, you’ll need to do some tidying. The first step is always to figure out what the variables and observations are. Sometimes this is easy; other times you’ll need to consult with the people who originally generated the data. The second step is to resolve one of two common problems:\n\n* One variable might be spread across multiple columns.\n\n* One observation might be scattered across multiple rows.\n\nTo avoid structuring in ways that make it harder to parse, there are three interrelated principles which make a data set tidy:\n\n* Each variable must have its own column.\n\n* Each observation must have its own row.\n\n* Each value must have its own cell.\n\nAn additional advantage of tidy data is that is can be transformed more easily into any other format when needed.\n\n## How to minimize storage space{-}\n\nMost people use or rely on data that comes in spreadsheets and use software such as Microsoft Excel or OpenOffice Calc. However, spreadsheets produced by these software applications take up a lot of storage space. \n\nOne way to minimize the space, that your data takes up, is to copy the data and paste it into a simple editor or txt-file. The good thing about txt files is that they take up only very little space and they can be viewed easily so that you can open the file to see what the data looks like. You could then delete the spread sheet because you can copy and paste the content of the txt file right back into a spread sheet when you need it. \n\nIf you work with R, you may also consider to save your data as .rda files which is a very efficient way to save and story data in an R environment\n\nBelow is an example for how you can load, process, and save your data as .rda in RStudio.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load data\nlmm <- read.delim(\"https://slcladal.github.io/data/lmmdata.txt\", header = TRUE)\n# convert strings to factors\nlmm <- lmm %>%\n  mutate(Genre = factor(Genre),\n         Text = factor(Text),\n         Region = factor(Region))\n# save data\nbase::saveRDS(lmm, file = here::here(\"data\", \"lmm_out.rda\"))\n# remove lmm object\nrm(lmm)\n# load .rda data\nlmm  <- base::readRDS(file = here::here(\"data\", \"lmm_out.rda\"))\n# or from web\nlmm  <- base::readRDS(url(\"https://slcladal.github.io/data/lmm.rda\", \"rb\"))\n# inspect data\nstr(lmm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t537 obs. of  5 variables:\n $ Date        : int  1736 1711 1808 1878 1743 1908 1906 1897 1785 1776 ...\n $ Genre       : Factor w/ 16 levels \"Bible\",\"Biography\",..: 13 4 10 4 4 4 3 9 9 3 ...\n $ Text        : Factor w/ 271 levels \"abott\",\"albin\",..: 2 6 12 16 17 20 20 24 26 27 ...\n $ Prepositions: num  166 140 131 151 146 ...\n $ Region      : Factor w/ 2 levels \"North\",\"South\": 1 1 1 1 1 1 1 1 1 1 ...\n```\n\n\n:::\n:::\n\n\n\n\nTo compare, the `lmmdata.txt` requires 19.2KB while the `lmmdata.rda` only requires 5.2KB (and only 4.1KB with *xz* compression). If stored as an Excel spreadsheet, the same file requires 28.6KB.\n\n\n# Markdown\n\n![](/images/hex-rmarkdown.png){ width=25% style=\"float:right; padding:10px\" }\n\nMarkdown is a lightweight markup language that you can use to add formatting elements to plaintext text documents. Markdown's simplicity and readability render it attractive for a wide range of writing and documentation tasks. Its flexibility allows it to be extended to suit more complex needs, making it a versatile tool. Created by John Gruber in 2004, its primary purpose is to allow people to write in an easy-to-read and easy-to-write plain text format, which can then be converted to structurally valid HTML (or other formats such as docx or pdf). Markdown is widely used for documentation, web writing, and content creation because of its simplicity and flexibility. Markdown provides an authoring framework for data science as Markdown can produce  high quality reports that can be shared with an audience. The advantage of Markdown is that one can use a single Markdown file (or Markdown document) to combine\n\n* executable code\n\n* code output (such as visualizations and results of calculations)\n\n* plain text (to explain, report, and document)\n\nR Markdown documents are fully reproducible and support dozens of static and dynamic output formats. Here are some key points about Markdown:\n\n* *Simplicity*: Markdown syntax is designed to be readable and easy to write. It avoids the complexity of other markup languages, making it accessible even for non-technical users.\n\n* *Plain Text Formatting*: Since Markdown is written in plain text, it can be created and edited in any text editor. This makes it highly portable and version control friendly.\n\n* *Conversion*: Markdown can be easily converted to HTML, making it ideal for web content. Many static site generators and content management systems support Markdown natively.\n\n* *Extensibility*: While the core syntax is intentionally simple, Markdown can be extended with plugins or additional syntaxes for more advanced features like tables, footnotes, and embedded content.\n\nCommon Uses of Markdown include, for example, *documentation*, *read-me files*, *notes*, and *to-do lists*  because it is easy to read in its raw form and can be rendered beautifully in web browsers.\n\n\nCheck out [this introduction](https://rmarkdown.rstudio.com/) to R Markdown by RStudio and have a look at [this R Markdown cheat sheet](https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf).\n\nHere's a guide with commands on the top and their rendered output below.\n\n## Headings {-}\n\n**Command:**\n\n```markdown\n# Heading 1\n## Heading 2\n### Heading 3\n#### Heading 4\n##### Heading 5\n###### Heading 6\n```\n\n**Rendered:**\n\n# Heading 1\n## Heading 2\n### Heading 3\n#### Heading 4\n##### Heading 5\n###### Heading 6\n\n\n## Headings with Links{-}\n\n**Command:**\n\n```markdown\n### [Heading with a Link](https://www.example.com)\n```\n\n**Rendered:**\n\n### [Heading with a Link](https://www.example.com)\n\n\n## Custom IDs for Headings\n\n**Command:**\n\n```markdown\n### Custom ID Heading {#custom-id}\n```\n\n**Rendered:**\n\n### Custom ID Heading {#custom-id}\n\n## Table of Contents {-}\n\n**Command:**\n\n```markdown\n## Table of Contents\n- [Headings](#headings)\n- [Blockquotes](#blockquotes)\n- [Images](#images)\n- [Tables](#tables)\n```\n\n**Rendered:**\n\n## Table of Contents\n- [Headings](#headings)\n- [Blockquotes](#blockquotes)\n- [Images](#images)\n- [Tables](#tables)\n\n\n## Emphasis {-}\n\n**Command:**\n\n```markdown\n*Italic text*\n_Italic text_\n\n**Bold text**\n__Bold text__\n\n***Bold and italic***\n___Bold and italic___\n```\n\n**Rendered:**\n\n*Italic text*  \n_Italic text_\n\n**Bold text**  \n__Bold text__\n\n***Bold and italic***  \n___Bold and italic___\n\n\n## Strikethrough {-}\n\n**Command:**\n\n```markdown\nThis is a ~~strikethrough~~ example.\n```\n\n**Rendered:**\n\nThis is a ~~strikethrough~~ example.\n\n\n## Superscript and Subscript {-}\n\n**Command:**\n\n```markdown\nH~2~O and E=mc^2^\n```\n\n**Rendered:**\n\nH~2~O and E=mc^2^\n\n## Highlight{-}\n\n**Command:**\n\n```markdown\nI need to ==highlight== this text.\n```\n\n**Rendered:**\n\nI need to ==highlight== this text.\n\n\n## Emojis {-}\n\n**Command:**\n\n```markdown\nHere is an emoji: :smile:\n```\n\n**Rendered:**\n\nHere is an emoji: :smile:\n\n## Emoji Shortcodes {-}\n\n**Command:**\n\n```markdown\n:smile: :+1: :sparkles:\n```\n\n**Rendered:**\n\n:smile: :+1: :sparkles:\n\n## Lists {-}\n\n### Unordered List {-}\n\n**Command:**\n\n```markdown\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n- Item 3\n```\n\n**Rendered:**\n\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n- Item 3\n\n### Ordered List {-}\n\n**Command:**\n\n```markdown\n1. First item\n2. Second item\n3. Third item\n   1. Subitem 3.1\n   2. Subitem 3.2\n```\n\n**Rendered:**\n\n1. First item\n2. Second item\n3. Third item\n   1. Subitem 3.1\n   2. Subitem 3.2\n\n### Task Lists {-}\n\n**Command:**\n\n```markdown\n- [x] Completed task\n- [ ] Incomplete task\n- [ ] Another incomplete task\n```\n\n**Rendered:**\n\n- [x] Completed task\n- [ ] Incomplete task\n- [ ] Another incomplete task\n\n\n### Advanced Task Lists {-}\n\n**Command:**\n\n```markdown\n- [ ] Task 1\n  - [x] Subtask 1\n  - [ ] Subtask 2\n- [x] Task 2\n```\n\n**Rendered:**\n\n- [ ] Task 1\n  - [x] Subtask 1\n  - [ ] Subtask 2\n- [x] Task 2\n\n\n### Definition Lists {-}\n\n**Command:**\n\n```markdown\nFirst Term\n: This is the definition of the first term.\n\nSecond Term\n: This is the definition of the second term.\n```\n\n**Rendered:**\n\nFirst Term  \n: This is the definition of the first term.\n\nSecond Term  \n: This is the definition of the second term.\n\n\n### Nested Lists {-}\n\n**Command:**\n\n```markdown\n1. First item\n   - Subitem 1\n     - Sub-subitem 1\n   - Subitem 2\n2. Second item\n```\n\n**Rendered:**\n\n1. First item\n   - Subitem 1\n     - Sub-subitem 1\n   - Subitem 2\n2. Second item\n\n\n\n## Links {-}\n\n**Command:**\n\n```markdown\n[LADAL](https://ladal.edu.au)\n```\n\n**Rendered:**\n\n[LADAL](https://ladal.edu.au)\n\n## Images {-}\n\n**Command:**\n\n```markdown\n![Alt text](https://via.placeholder.com/150)\n```\n\n**Rendered:**\n\n![Alt text](https://via.placeholder.com/150)\n\n\n## Images with Links {-}\n\n**Command:**\n\n```markdown\n[![Alt text](https://via.placeholder.com/150)](https://www.example.com)\n```\n\n**Rendered:**\n\n[![Alt text](https://via.placeholder.com/150)](https://www.example.com)\n\n\n## Blockquotes {-}\n\n**Command:**\n\n```markdown\n> This is a blockquote.\n> \n> This is a second paragraph within the blockquote.\n```\n\n**Rendered:**\n\n> This is a blockquote.\n> \n> This is a second paragraph within the blockquote.\n\n## Blockquotes with Multiple Paragraphs {-}\n\n**Command:**\n\n```markdown\n> This is a blockquote with multiple paragraphs.\n>\n> This is the second paragraph in the blockquote.\n```\n\n**Rendered:**\n\n> This is a blockquote with multiple paragraphs.\n>\n> This is the second paragraph in the blockquote.\n\n\n## Code {-}\n\n### Inline Code {-}\n\n**Command:**\n\n```markdown\n`inline code`\n```\n\n**Rendered:**\n\n`inline code`\n\n### Code Block {-}\n\n**Command:**\n\n<pre markdown=\"1\">\n```markdown\n{\n  \"firstName\": \"Martin\",\n  \"lastName\": \"Schweinberger\",\n  \"age\": 43\n}\n```\n</pre>\n\n**Rendered:**\n\n```json\n{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"age\": 25\n}\n```\n\n## Blockquotes with Nested Elements {-}\n\n**Command:**\n\n```markdown\n> ### This is a heading\n> - This is a list item within a blockquote\n> - Another item\n>\n> > This is a nested blockquote\n```\n\n**Rendered:**\n\n> ### This is a heading\n> - This is a list item within a blockquote\n> - Another item\n>\n> > This is a nested blockquote\n\n## Inline HTML {-}\n\n**Command:**\n\n```markdown\n<p>This is an inline HTML paragraph.</p>\n```\n\n**Rendered:**\n\n<p>This is an inline HTML paragraph.</p>\n\n\n## HTML Entities{-}\n\n**Command:**\n\n```markdown\nAT&T &copy; 2024\n```\n\n**Rendered:**\n\nAT&T &copy; 2024\n\n\n## Expandable Sections (Details Tag){-}\n\n**Command:**\n\n```markdown\n<details>\n  <summary>Click to expand</summary>\n  This is the detailed content that is hidden until expanded.\n</details>\n```\n\n**Rendered:**\n\n<details>\n  <summary>Click to expand</summary>\n  This is the detailed content that is hidden until expanded.\n</details>\n\n\n## Horizontal Rule {-}\n\n**Command:**\n\n```markdown\n\n## Tables {-}\n\n**Command:**\n\n```markdown\n| Header 1 | Header 2 |\n|----------|----------|\n| Cell 1   | Cell 2   |\n| Cell 3   | Cell 4   |\n```\n\n**Rendered:**\n\n| Header 1 | Header 2 |\n|----------|----------|\n| Cell 1   | Cell 2   |\n| Cell 3   | Cell 4   |\n\n\n## Advanced Tables {-}\n\n**Command:**\n\n```markdown\n| Header 1 | Header 2 | Header 3 |\n|----------|----------|----------|\n| Row 1 Col 1 | Row 1 Col 2 | Row 1 Col 3 |\n| Row 2 Col 1 | Row 2 Col 2 | Row 2 Col 3 |\n```\n\n**Rendered:**\n\n| Header 1    | Header 2    | Header 3    |\n|-------------|-------------|-------------|\n| Row 1 Col 1 | Row 1 Col 2 | Row 1 Col 3 |\n| Row 2 Col 1 | Row 2 Col 2 | Row 2 Col 3 |\n\n\n## Footnotes {-}\n\n**Command:**\n\n```markdown\nHere is a simple footnote[^1].\n\n[^1]: This is the footnote.\n```\n\n**Rendered:**\n\nHere is a simple footnote[^1] (you can find it at the end/bottom of this document).\n\n[^1]: This is the footnote.\n\n\n## Syntax Highlighting {-}\n\n**Command:**\n\n<pre markdown=\"1\">\n```python\ndef hello_world():\n    print(\"Hello, world!\")\n```\n</pre>\n\n**Rendered:**\n\n```python\ndef hello_world():\n    print(\"Hello, world!\")\n```\n\n\n## Math Expressions {-}\n\n**Command:**\n\n```markdown\nInline math: $E = mc^2$\n\nBlock math:\n$$\n\\frac{a}{b} = c\n$$\n```\n\n**Rendered:**\n\nInline math: \\( E = mc^2 \\)\n\nBlock math:\n\n$$\n\\frac{a}{b} = c\n$$\n\n\n## Escaping Characters {-}\n\n**Command:**\n\n```markdown\nUse the backslash to escape special characters: \\*literal asterisks\\*\n```\n\n**Rendered:**\n\nUse the backslash to escape special characters: \\*literal asterisks\\*\n\n\n## Mermaid Diagrams {-}\n\n**Command:**\n\n```markdown\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n```\n\n**Rendered:**\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n\n\n---\n\nThese additional advanced Markdown features allow you to create even more complex and sophisticated documents. Practice using these commands to further enhance your Markdown proficiency!\n\n\n# Generating Interactive Notebooks\n\nMarkdown documents can also serve as the basis of interactive notebooks. These notebooks are generated from a GitHub repository using a template provided by the *Australian Text Analytics Platform* (ATAP) and the *Language Data Commons of Australia* (LDaCA). \n\nThe transformation from a static to an interactive notebook involves Dockerizing the GitHub repository, essentially creating a virtual machine based on the repository's specified parameters. Subsequently, the interactive notebook is loaded into a Binder workspace, enabling others to interact with copies of your notebook. This sounds very fancy but is, fortunately, quite easy to do. One should be aware though that once a session concludes, the copy of the notebook is closed, although you have the option to save a copy at any point.\n\nInteractive notebooks are very versatile and serve various purposes, including the creation of teaching materials for statistics, text analytics, or programming-focused courses or classes, rendering one's work transparent by sharing analyses with colleagues or reviewers, creating notebook-based online tools, or showcasing the implementation of computational methods. They accommodate both quantitative statistical and qualitative interpretative work.\n\nNotably, interactive notebooks empower others to execute and edit your code, facilitating data and analysis validation.\n\nBefore generating an interactive notebook, ensure you have three essential components:\n\n1. An R project containing an Rmd file.\n2. An Rmd file named *rmd2jupyter.Rmd*.\n3. A GitHub account.\n\nThe Rmd file should utilize only one programming language, such as R, Python, or Julia, without mixing languages. Additionally, all necessary resources, such as data, should be accessible within the GitHub repository. It's highly recommended to generate interactive notebooks only once a project or analysis is complete.\n\nNow, let's proceed with the process of generating an interactive notebook.\n\n## Preparation of the Rmd {-}\n\n1. Begin by duplicating the Rmd file. A simple convention is to append \"_cb\" to the filename, indicating that this version will be converted into an interactive notebook.\n\n2. Unlike R Notebooks, interactive Jupyter notebooks do not utilize a YAML metadata header. Consequently, remove the YAML metadata header from the duplicated Rmd file and replace it with a first-level header to denote the notebook's title. It's advisable to adjust all headers in the Rmd file to maintain the original structure.\n\n3. Create a separate script file to list all required packages for installation. Remove any code chunks responsible for installing packages, as Jupyter notebooks have limited options for hiding code chunks.\n\n## Converting your Rmd into a Jupyter notebook {-}\n\n4. Open the \"rmd2jupyter.Rmd\" file and proceed to install and activate the \"rmd2jupyter\" package, which contains the necessary function for Rmd to Jupyter conversion. Since this package isn't available via CRAN, utilize the \"devtools\" package for installation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(devtools)\ndevtools::install_github(\"mkearney/rmd2jupyter\")\nlibrary(rmd2jupyter)\n```\n:::\n\n\n\n5. Once the \"rmd2jupyter\" package is activated, use the \"rmd2jupyter\" function to convert the Rmd file to a Jupyter notebook.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert one notebook\nrmd2jupyter::rmd2jupyter(here::here(\"acvqainter_cb.Rmd\"))\n```\n:::\n\n\n\n## Creating a GitHub repository that connects to Binder {-}\n\n6. Log in to your GitHub account and visit: [https://github.com/Australian-Text-Analytics-Platform/r-binder-template](https://github.com/Australian-Text-Analytics-Platform/r-binder-template).\n\n7. On the GitHub page, click on *Use this template* and select *Create a new repository* from the dropdown menu. Assign a name to the repository and optionally provide a brief description.\n\n8. Open the \"install.R\" file and specify the packages to be pre-installed by adding commands like *install.packages(\"dplyr\")* on separate lines.\n\n9. Upload your Jupyter notebook by selecting *Upload file* from the drop-down menu. Additionally, if you need to create folders, create a dummy file first and specify its location as a subfolder.\n\nOnce all required packages, the Jupyter notebook, and any necessary data files are uploaded, initiate the notebook by following the provided link. Adapt the URL to point to your interactive notebook by adjusting the username, repository name, and notebook filename.\n\nAlternatively, consider uploading your Jupyter notebook to Google Colab for sharing. However, note that Google Colab may terminate sessions if computations take too long or exceed resource limits.\n\nPlease anticipate an extended setup time for the interactive notebook's first launch, as Docker image creation from the GitHub repository may take up to an hour for complex notebooks with numerous dependencies. Simpler notebooks typically start faster but may still require at least 10 minutes for the initial setup.\n\n# Creating Bookdown Websites \n\nGenerating webpages in RStudio and via GitHub is very easy to do and offers various options for researchers and teachers. Here, I'll outline the process I used to create an online webscript, primarily relying on resources and documentation provided by GitHub user jtr13.\n\n1. Log in to GitHub.\n\n2. Visit [https://github.com/jtr13/bookdown-template](https://github.com/jtr13/bookdown-template).\n\n3. Click on *Use this template*.\n\n4. On your repository's home page, navigate to *Settings*. Then, go to the *Pages* section on the left. Under **Build and Deployment**, set **Source** to *Deploy from a branch* and **Branch** to **main** with **/docs** folder. Click Save. A box will appear above the **Build and Deployment** section with your book's URL. Copy the URL.\n\n5. Near \"About\" on the home page of your repo, click the gear button and paste your book URL into the **Website** field that appears on the right.\n\n6. Click the green Code button and copy the HTTPS link, formatted like this: `https://github.com/[USERNAME]/[REPO NAME].git`.\n\n7. Clone your new repo in RStudio via *File* -> *New Project* -> *Version Control* -> *Git*. Paste the link from the previous step in the Repository URL box.\n\n8. In `index.Rmd`, replace \"YOUR TITLE HERE\" with your title.\n\n9. In `index.Rmd`, replace \"YOUR NAMES HERE\" with your names.\n\n10. In `_bookdown.yml`, replace \"YOUR GITHUB USERNAME\" with your GitHub username in the two instances.\n\n11. In `_bookdown.yml`, replace \"YOUR GITHUB REPO\" with your GitHub repo name in the two instances. Note that steps 3 and 4 provide links to the `.Rmd` files of your project for editing and viewing. Update these file paths if you move your `.Rmd` files. Once your book is rendered, test that the edit (pen) and view (eye) buttons work.\n\n12. In `_output.yml`, change \"YOUR SHORT TITLE\" to a shortened version of your title. Leave the \"after:\" line indicating that the book was published with bookdown unchanged.\n\n13. Install **bookdown** with `install.packages(\"bookdown\")`. If you already have it, update to the latest version.\n\n14. Render locally with `bookdown::render_book(\"index.Rmd\")` or by clicking the *Build book* button in the Build tab.\n\n15. Use `browseURL(\"docs/index.html\")` to view your book locally or open `index.html` in a browser.\n\n16. If everything looks good, commit and push all changed files to GitHub. Note that you'll need to repeat steps 2 and 4 every time you wish to update the online book.\n\n17. Edit README (GitHub or RStudio): Once you've completed these steps, delete the content of this **README** and add a brief description of your project with a link to the book URL.\n\n# Citation & Session Info {-}\n\nSchweinberger, Martin. 2024. *Data Management and Reproducibility*. Brisbane: The University of Queensland. url: https://ladal.edu.au/repro.html (Version 2024.05.22).\n\n```\n@manual{schweinberger2024repro,\n  author = {Schweinberger, Martin},\n  title = {Data Management, Version Control, and Reproducibility},\n  note = {https://ladal.edu.au/repro.html},\n  year = {2024},\n  organization = {The University of Queensland, School of Languages and Cultures},\n  address = {Brisbane},\n  edition = {2024.05.22}\n}\n```\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Australia/Brisbane\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] gapminder_1.0.0  lubridate_1.9.3  forcats_1.0.0    stringr_1.5.1   \n [5] dplyr_1.1.4      purrr_1.0.2      readr_2.1.5      tibble_3.2.1    \n [9] ggplot2_3.5.1    tidyverse_2.0.0  tidyr_1.3.1      here_1.0.1      \n[13] DT_0.33          kableExtra_1.4.0 knitr_1.48      \n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    xml2_1.3.6        stringi_1.8.4    \n [5] hms_1.1.3         digest_0.6.37     magrittr_2.0.3    evaluate_1.0.1   \n [9] grid_4.4.1        timechange_0.3.0  fastmap_1.2.0     rprojroot_2.0.4  \n[13] jsonlite_1.8.9    fansi_1.0.6       viridisLite_0.4.2 scales_1.3.0     \n[17] codetools_0.2-20  cli_3.6.3         rlang_1.1.4       munsell_0.5.1    \n[21] withr_3.0.2       tools_4.4.1       tzdb_0.4.0        colorspace_2.1-1 \n[25] vctrs_0.6.5       R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4\n[29] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.6      glue_1.8.0       \n[33] systemfonts_1.1.0 xfun_0.49         tidyselect_1.2.1  rstudioapi_0.17.1\n[37] htmltools_0.5.8.1 rmarkdown_2.28    svglite_2.1.3     compiler_4.4.1   \n```\n\n\n:::\n:::\n\n\n\n\n***\n\n[Back to top](#introduction)\n\n[Back to HOME](https://ladal.edu.au)\n\n***\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}