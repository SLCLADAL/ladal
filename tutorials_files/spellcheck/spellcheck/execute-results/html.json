{
  "hash": "b69b12929b5cb16531cc6ceefe3bc48f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Spell checking text data with R\"\nauthor: \"Martin Schweinberger\"\n---\n\n\n\n![](/images/uq1.jpg){ width=100% }\n\n\n# Introduction{-}\n\nThis tutorial focuses on spell checking and shows how to perform spell checking in R. This tutorial builds heavily on (the documentation site of the `hunspell` package)[https://cran.r-project.org/web/packages/hunspell/vignettes/intro.html] [@hunspell].  \n\n![](/images/gy_chili.png){ width=15% style=\"float:right; padding:10px\" }\n\nThis tutorial is aimed at beginners and intermediate users of R with the aim of showcasing how to perform spell checking of textual data  using R. The aim is not to provide a fully-fledged analysis but rather to show and exemplify selected useful aspects of spell checking. \n\n\n<div class=\"warning\" style='padding:0.1em; background-color:#f2f2f2; color:#51247a'>\n<span>\n<p style='margin-top:1em; text-align:center'>\nThe entire R Notebook for the tutorial can be downloaded [**here**](https://slcladal.github.io/content/spellcheck.Rmd).  If you want to render the R Notebook on your machine, i.e. knitting the document to html or a pdf, you need to make sure that you have R and RStudio installed and you also need to download the [**bibliography file**](https://slcladal.github.io/content/bibliography.bib) and store it in the same folder where you store the Rmd file. <br><br>\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/SLCLADAL/interactive-notebooks-environment/main?urlpath=git-pull%3Frepo%3Dhttps%253A%252F%252Fgithub.com%252FSLCLADAL%252Finteractive-notebooks%26urlpath%3Dlab%252Ftree%252Finteractive-notebooks%252Fnotebooks%252Fspellcheck_cb.ipynb%26branch%3Dmain)<br>\n[**Click this link to open an interactive version of this tutorial on MyBinder.org**](https://mybinder.org/v2/gh/SLCLADAL/interactive-notebooks-environment/main?urlpath=git-pull%3Frepo%3Dhttps%253A%252F%252Fgithub.com%252FSLCLADAL%252Finteractive-notebooks%26urlpath%3Dlab%252Ftree%252Finteractive-notebooks%252Fnotebooks%252Fspellcheck_cb.ipynb%26branch%3Dmain). <br> This interactive Jupyter notebook allows you to execute code yourself and you can also change and edit the notebook, e.g. you can change code and upload your own data. <br>\n</p>\n<p style='margin-left:1em;'>\n</p></span>\n</div>\n\n<br>\n\n# What is spell checking? {-}\n\nSpell checking is the process of checking for and identifying spelling errors in a piece of text. It works by comparing each word in the text against a dictionary of correctly spelled words, and marking any words that are not found in the dictionary as potentially misspelled.\n\nSpell checking is used in a variety of applications, including word processors, email clients, and online text editors, to help users produce error-free written material. The goal of spell checking is to improve the accuracy and readability of written text by catching and correcting spelling errors before they are published or sent.\n\nSpell checking of textual data consists of the following steps:\n\n* First, the text in a document is tokenized, i.e. the text is broken down into individual words.\n* Each word is then broken down in itâ€™s root (stemming) and affix(es)\n* Next, it i checked if the word (plus affix combination) occurs in a dictionary\n* Optionally, for words (or combinations), corrections are suggested based on similar words in the dictionary\n\n# Spell checking in R with hunspell {-}\n\nThe `hunspell` package provides access to Hunspell which is a spell checker library used in various software applications such as OpenOffice, Mozilla Firefox, or RStudio. In addition to simple spell checking, the `hunspell` package also provides additional funtionalities like tokenization or stemming and and its spell checking capabilities encompass almost any language or alphabet. Tokenization and stemming are part of the `hunspell` package in order to split texts into individual words but also to extract text from several file formats such as basic text, html, pdf, or xml.\n\nThe `hunspell` package checks if words occur in a given dictionary with  the (default) dictionary being \"en_US\". However each function can be used in another language by setting a custom dictionary in the `dict` parameter. \n\n**Preparation and session set up**\n\nThis tutorial is based on R. If you have not installed R or are new to it, you will find an introduction to and more information how to use R [here](https://slcladal.github.io/intror.html). For this tutorials, we need to install certain *packages* from an R *library* so that the scripts shown below are executed without errors. Before turning to the code below, please install the packages by running the code below this paragraph. If you have already installed the packages mentioned below, then you can skip ahead and ignore this section. To install the necessary packages, simply run the following code - it may take some time (between 1 and 5 minutes to install all of the packages so you do not need to worry if it takes some time).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install packages\ninstall.packages(\"dplyr\")\ninstall.packages(\"stringr\")\ninstall.packages(\"quanteda\")\ninstall.packages(\"hunspell\")\ninstall.packages(\"flextable\")\n# install klippy for copy-to-clipboard button in code chunks\ninstall.packages(\"remotes\")\nremotes::install_github(\"rlesur/klippy\")\n```\n:::\n\n\n\n\nNow that we have installed the packages, we activate them as shown below.\n\n\n\n::: {.cell}\n\n```{.r .klippy .cell-code}\n# activate packages\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(quanteda)\nlibrary(hunspell)\nlibrary(flextable)\n# activate klippy for copy-to-clipboard button\nklippy::klippy()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<script>\n  addClassKlippyTo(\"pre.r, pre.markdown\");\n  addKlippy('left', 'top', 'auto', '1', 'Copy code', 'Copied!');\n</script>\n```\n\n:::\n:::\n\n\n\n\nOnce you have installed R and RStudio and initiated the session by executing the code shown above, you are good to go.\n\nIn the following, we will perform spell checking and explore several useful functions associated with spell checking in the `hunspell` package.\n\n## Checking individual words {-}\n\nWe start by checking a vector of individual words.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwords <- c(\"analyze\", \"langauge\", \"data\")\ncorrect <- hunspell_check(words)\nprint(correct)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  TRUE FALSE  TRUE\n```\n\n\n:::\n:::\n\n\n\nThe output shows that the second word was not found in the dictionary, i.e., it is identified as being incorrect. Next, we can ask for suggestions, i.e. the correct form of the word.\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"language\" \"melange\" \n```\n\n\n:::\n:::\n\n\n\nIn this case, there are two words that are deemed as potential alternatives.\n\n## Checking documents {-}\n\nSince we rarely want to check individual words, we will now focus on spell checking full texts rather than individual vectors with words.\n\nFirst, we load a text (in this case an explanation of what grammer is that is taken from Wikipedia).\n\n\n\n\n::: {.cell cmessage='false'}\n\n```{.r .cell-code}\n# read in text\nexampletext <- base::readRDS(url(\"https://slcladal.github.io/data/tx1.rda\", \"rb\"))\n# inspect\nexampletext\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Grammar is a system of rules which governs the production and use of utterances in a given language. These rules apply to sound as well as meaning, and include componential subsets of rules, such as those pertaining to phonology (the organisation of phonetic sound systems), morphology (the formation and composition of words), and syntax (the formation and composition of phrases and sentences). Many modern theories that deal with the principles of grammar are based on Noam Chomsky's framework of generative linguistics.\"\n```\n\n\n:::\n:::\n\n\n\nWe now use the `hunspell` function to find incorrect words (or, more precisely, words that are not in the default dictionary). The output shows that *organisation* is considered an error as it follows British spelling conventions (more about this in the section on setting a language).\n\n\n\n\n::: {.cell cmessage='false'}\n\n```{.r .cell-code}\nerrors <- hunspell(exampletext)\nerrors[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"componential\" \"organisation\" \"Noam\"        \n```\n\n\n:::\n:::\n\n\n\nWe check what suggestions we get for these words.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunspell_suggest(errors[[1]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"component\"   \"exponential\" \"continental\"\n\n[[2]]\n[1] \"organization\" \"organist\"     \"sanitation\"  \n\n[[3]]\n[1] \"Nam\"   \"Roam\"  \"Loam\"  \"Noah\"  \"Foam\"  \"No am\" \"No-am\" \"Moan\"  \"Norm\" \n```\n\n\n:::\n:::\n\n\n\nIn our case, the words are not errors but simply terms that do not occur in the dictionary, either because they are specialist terminology (*componential*), they follow British spelling conventions (*organisation*), or they represent an uncommon proper name (*Noam*). Thus, so we will not replace them.\n\n## Stemming Words {-}\n\nThe `hunspell_stem` looks up words from the dictionary which match the root of the given word (sometimes multiple items are returned if there are multiple matches in the dictionary).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntoks <- c(\"love\", \"loving\", \"lovingly\", \"loved\", \"lover\", \"lovely\")\nhunspell_stem(toks)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"love\"\n\n[[2]]\n[1] \"loving\" \"love\"  \n\n[[3]]\n[1] \"loving\"\n\n[[4]]\n[1] \"loved\" \"love\" \n\n[[5]]\n[1] \"lover\" \"love\" \n\n[[6]]\n[1] \"lovely\" \"love\"  \n```\n\n\n:::\n:::\n\n\n\nThe `hunspell_stem` function can be very useful when trying to find the stems of words in a corpusto see, e.g., how many word types a text contains.\n\n\n## Working with texts {-}\n\nIt is quite common that we work with texts rather than individual  word vectors. As such, in the following, we will go through a workflow that resembles what one might use spell checking for in their research. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexttable <- quanteda::tokens(\"Noam said he loves to analyze langauge and collors.\") %>%\n    unlist() %>%\n    as.data.frame() %>%\n    dplyr::rename(words = 1) %>%\n    dplyr::mutate(\n        id = 1:nrow(.),\n        error = hunspell::hunspell_check(words)\n    ) %>%\n    dplyr::relocate(id)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-3846a36c{table-layout:auto;width:95%;}.cl-3841b190{font-family:'Helvetica';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-3841b19a{font-family:'Helvetica';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-3843ce58{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-3843ce59{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-38444612{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3844461c{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3844461d{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3844461e{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3844461f{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38444620{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38444626{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38444627{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38444628{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38444629{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3844462a{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38444630{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-3846a36c'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-38444612\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b190\">id</span></p></th><th class=\"cl-3844461c\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b190\">words</span></p></th><th class=\"cl-3844461d\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b190\">error</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3844461e\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">1</span></p></td><td class=\"cl-3844461f\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b19a\">Noam</span></p></td><td class=\"cl-38444620\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">FALSE</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38444626\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">2</span></p></td><td class=\"cl-38444627\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b19a\">said</span></p></td><td class=\"cl-38444628\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">TRUE</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3844461e\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">3</span></p></td><td class=\"cl-3844461f\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b19a\">he</span></p></td><td class=\"cl-38444620\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">TRUE</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38444626\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">4</span></p></td><td class=\"cl-38444627\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b19a\">loves</span></p></td><td class=\"cl-38444628\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">TRUE</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3844461e\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">5</span></p></td><td class=\"cl-3844461f\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b19a\">to</span></p></td><td class=\"cl-38444620\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">TRUE</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38444626\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">6</span></p></td><td class=\"cl-38444627\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b19a\">analyze</span></p></td><td class=\"cl-38444628\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">TRUE</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3844461e\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">7</span></p></td><td class=\"cl-3844461f\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b19a\">langauge</span></p></td><td class=\"cl-38444620\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">FALSE</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38444626\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">8</span></p></td><td class=\"cl-38444627\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b19a\">and</span></p></td><td class=\"cl-38444628\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">TRUE</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3844461e\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">9</span></p></td><td class=\"cl-3844461f\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b19a\">collors</span></p></td><td class=\"cl-38444620\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">FALSE</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38444629\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">10</span></p></td><td class=\"cl-3844462a\"><p class=\"cl-3843ce59\"><span class=\"cl-3841b19a\">.</span></p></td><td class=\"cl-38444630\"><p class=\"cl-3843ce58\"><span class=\"cl-3841b19a\">TRUE</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\nThe output shows the original word and if it was identified as an errors (i.e., it did not occur in the dictionary). Next, we extract suggestions for the words that were identified as errors.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexttable2 <- texttable %>%\n    # add suggestions\n    dplyr::mutate(\n        suggestions = ifelse(error == F,\n            paste0(hunspell_suggest(words), \", \"),\n            \"\"\n        ),\n        # clean suggestions\n        suggestions = stringr::str_remove_all(suggestions, fixed(\"c(\")),\n        suggestions = stringr::str_remove_all(suggestions, fixed(\")\")),\n        suggestions = stringr::str_remove_all(suggestions, \", {0,1}$\")\n    )\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-38695236{table-layout:auto;width:95%;}.cl-38652bd4{font-family:'Helvetica';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-38652bde{font-family:'Helvetica';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-38670706{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-38670710{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-38671552{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38671553{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3867155c{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3867155d{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3867155e{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3867155f{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38671566{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38671567{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38671568{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38671569{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3867156a{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3867156b{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3867156c{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38671570{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38671571{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38671572{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-38695236'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-38671552\"><p class=\"cl-38670706\"><span class=\"cl-38652bd4\">id</span></p></th><th class=\"cl-38671553\"><p class=\"cl-38670710\"><span class=\"cl-38652bd4\">words</span></p></th><th class=\"cl-3867155c\"><p class=\"cl-38670706\"><span class=\"cl-38652bd4\">error</span></p></th><th class=\"cl-3867155d\"><p class=\"cl-38670710\"><span class=\"cl-38652bd4\">suggestions</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3867155e\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">1</span></p></td><td class=\"cl-3867155f\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">Noam</span></p></td><td class=\"cl-38671566\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">FALSE</span></p></td><td class=\"cl-38671567\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">\"Nam\", \"Roam\", \"Loam\", \"Noah\", \"Foam\", \"No am\", \"No-am\", \"Moan\", \"Norm\"</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38671568\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">2</span></p></td><td class=\"cl-38671569\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">said</span></p></td><td class=\"cl-3867156a\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">TRUE</span></p></td><td class=\"cl-3867156b\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\"></span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3867155e\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">3</span></p></td><td class=\"cl-3867155f\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">he</span></p></td><td class=\"cl-38671566\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">TRUE</span></p></td><td class=\"cl-38671567\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\"></span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38671568\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">4</span></p></td><td class=\"cl-38671569\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">loves</span></p></td><td class=\"cl-3867156a\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">TRUE</span></p></td><td class=\"cl-3867156b\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\"></span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3867155e\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">5</span></p></td><td class=\"cl-3867155f\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">to</span></p></td><td class=\"cl-38671566\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">TRUE</span></p></td><td class=\"cl-38671567\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\"></span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38671568\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">6</span></p></td><td class=\"cl-38671569\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">analyze</span></p></td><td class=\"cl-3867156a\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">TRUE</span></p></td><td class=\"cl-3867156b\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\"></span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3867155e\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">7</span></p></td><td class=\"cl-3867155f\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">langauge</span></p></td><td class=\"cl-38671566\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">FALSE</span></p></td><td class=\"cl-38671567\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">\"language\", \"melange\"</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38671568\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">8</span></p></td><td class=\"cl-38671569\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">and</span></p></td><td class=\"cl-3867156a\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">TRUE</span></p></td><td class=\"cl-3867156b\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\"></span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3867155e\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">9</span></p></td><td class=\"cl-3867155f\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">collors</span></p></td><td class=\"cl-38671566\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">FALSE</span></p></td><td class=\"cl-38671567\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">\"colors\", \"collars\", \"collators\", \"color's\", \"color\"</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3867156c\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">10</span></p></td><td class=\"cl-38671570\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\">.</span></p></td><td class=\"cl-38671571\"><p class=\"cl-38670706\"><span class=\"cl-38652bde\">TRUE</span></p></td><td class=\"cl-38671572\"><p class=\"cl-38670710\"><span class=\"cl-38652bde\"></span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\nWe now want to replace the errors with the correct words but aso retain words that are erroneously regraded as errors. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexttable3 <- texttable2 %>%\n    # replace errors with the first suggestion\n    dplyr::mutate(corrected = dplyr::case_when(\n        error == T ~ words,\n        error == F ~ stringr::str_remove_all(suggestions, '\\\\\", .*'),\n        T ~ words\n    )) %>%\n    # clean the corrected words\n    dplyr::mutate(corrected = stringr::str_remove_all(corrected, '^\\\\\"')) %>%\n    # insert words where we do not want the suggestions but the original word\n    dplyr::mutate(corrected = dplyr::case_when(\n        words == \"Noam\" ~ words,\n        T ~ corrected\n    ))\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-3877ec2e{table-layout:auto;width:95%;}.cl-38744754{font-family:'Helvetica';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-3874475e{font-family:'Helvetica';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-3875f82e{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-3875f838{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-38760670{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38760671{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3876067a{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3876067b{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3876067c{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3876067d{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38760684{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38760685{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38760686{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3876068e{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3876068f{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38760690{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38760691{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38760698{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-38760699{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3876069a{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-3877ec2e'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-38760670\"><p class=\"cl-3875f82e\"><span class=\"cl-38744754\">id</span></p></th><th class=\"cl-38760671\"><p class=\"cl-3875f838\"><span class=\"cl-38744754\">words</span></p></th><th class=\"cl-3876067a\"><p class=\"cl-3875f82e\"><span class=\"cl-38744754\">error</span></p></th><th class=\"cl-38760671\"><p class=\"cl-3875f838\"><span class=\"cl-38744754\">suggestions</span></p></th><th class=\"cl-3876067b\"><p class=\"cl-3875f838\"><span class=\"cl-38744754\">corrected</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3876067c\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">1</span></p></td><td class=\"cl-3876067d\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">Noam</span></p></td><td class=\"cl-38760684\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">FALSE</span></p></td><td class=\"cl-3876067d\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">\"Nam\", \"Roam\", \"Loam\", \"Noah\", \"Foam\", \"No am\", \"No-am\", \"Moan\", \"Norm\"</span></p></td><td class=\"cl-38760685\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">Noam</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38760686\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">2</span></p></td><td class=\"cl-3876068e\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">said</span></p></td><td class=\"cl-3876068f\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">TRUE</span></p></td><td class=\"cl-3876068e\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\"></span></p></td><td class=\"cl-38760690\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">said</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3876067c\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">3</span></p></td><td class=\"cl-3876067d\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">he</span></p></td><td class=\"cl-38760684\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">TRUE</span></p></td><td class=\"cl-3876067d\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\"></span></p></td><td class=\"cl-38760685\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">he</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38760686\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">4</span></p></td><td class=\"cl-3876068e\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">loves</span></p></td><td class=\"cl-3876068f\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">TRUE</span></p></td><td class=\"cl-3876068e\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\"></span></p></td><td class=\"cl-38760690\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">loves</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3876067c\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">5</span></p></td><td class=\"cl-3876067d\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">to</span></p></td><td class=\"cl-38760684\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">TRUE</span></p></td><td class=\"cl-3876067d\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\"></span></p></td><td class=\"cl-38760685\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">to</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38760686\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">6</span></p></td><td class=\"cl-3876068e\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">analyze</span></p></td><td class=\"cl-3876068f\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">TRUE</span></p></td><td class=\"cl-3876068e\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\"></span></p></td><td class=\"cl-38760690\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">analyze</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3876067c\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">7</span></p></td><td class=\"cl-3876067d\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">langauge</span></p></td><td class=\"cl-38760684\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">FALSE</span></p></td><td class=\"cl-3876067d\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">\"language\", \"melange\"</span></p></td><td class=\"cl-38760685\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">language</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38760686\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">8</span></p></td><td class=\"cl-3876068e\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">and</span></p></td><td class=\"cl-3876068f\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">TRUE</span></p></td><td class=\"cl-3876068e\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\"></span></p></td><td class=\"cl-38760690\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">and</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3876067c\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">9</span></p></td><td class=\"cl-3876067d\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">collors</span></p></td><td class=\"cl-38760684\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">FALSE</span></p></td><td class=\"cl-3876067d\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">\"colors\", \"collars\", \"collators\", \"color's\", \"color\"</span></p></td><td class=\"cl-38760685\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">colors</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-38760691\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">10</span></p></td><td class=\"cl-38760698\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">.</span></p></td><td class=\"cl-38760699\"><p class=\"cl-3875f82e\"><span class=\"cl-3874475e\">TRUE</span></p></td><td class=\"cl-38760698\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\"></span></p></td><td class=\"cl-3876069a\"><p class=\"cl-3875f838\"><span class=\"cl-3874475e\">.</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\nWe can now check how many errors there are in our text.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexttable4 <- texttable3 %>%\n    dplyr::summarise(\n        tokens = nrow(.),\n        types = length(names(table(tolower(words)))),\n        errors_n = sum(ifelse(corrected == words, 0, 1)),\n        errors_percent = errors_n / tokens * 100\n    )\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-388365d6{table-layout:auto;width:95%;}.cl-38807952{font-family:'Helvetica';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-3880795c{font-family:'Helvetica';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-3881ab1a{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-3881b81c{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3881b826{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3881b827{background-color:rgba(207, 207, 207, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3881b828{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(102, 102, 102, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3881b830{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3881b831{background-color:rgba(239, 239, 239, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(102, 102, 102, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-388365d6'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-3881b81c\"><p class=\"cl-3881ab1a\"><span class=\"cl-38807952\">tokens</span></p></th><th class=\"cl-3881b826\"><p class=\"cl-3881ab1a\"><span class=\"cl-38807952\">types</span></p></th><th class=\"cl-3881b826\"><p class=\"cl-3881ab1a\"><span class=\"cl-38807952\">errors_n</span></p></th><th class=\"cl-3881b827\"><p class=\"cl-3881ab1a\"><span class=\"cl-38807952\">errors_percent</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-3881b828\"><p class=\"cl-3881ab1a\"><span class=\"cl-3880795c\">10</span></p></td><td class=\"cl-3881b830\"><p class=\"cl-3881ab1a\"><span class=\"cl-3880795c\">10</span></p></td><td class=\"cl-3881b830\"><p class=\"cl-3881ab1a\"><span class=\"cl-3880795c\">2</span></p></td><td class=\"cl-3881b831\"><p class=\"cl-3881ab1a\"><span class=\"cl-3880795c\">20</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\nFinally, we can put the corrected text back together. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrectedtext <- paste0(texttable3$corrected, collapse = \" \") %>%\n    stringr::str_replace_all(\" \\\\.\", \".\")\ncorrectedtext\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Noam said he loves to analyze language and colors.\"\n```\n\n\n:::\n:::\n\n\n\n\n## Setting a Language {-}\n\nBy default, the `hunspell` package includes dictionaries for `en_US` and `en_GB` which means that you can easily switch from US American to British English spelling. As a default, `hunspell` uses the `en_US` dictionary but we can easily switch to British English instead as shown below.\n\nFirst, we use the default `en_US` dictionary which returns *LADAL* as well as the British spellings of *analyse* and *colours* as errors. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunspell(\"At LADAL we like to analyse language and colours.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"LADAL\"   \"analyse\" \"colours\"\n```\n\n\n:::\n:::\n\n\n\nIf we switch to the `en_GB` dictionary, only *LADAL* is identified as not occuring in the dictionary.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunspell(\"At LADAL we like to analyse language and colours.\", dict = \"en_GB\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"LADAL\"\n```\n\n\n:::\n:::\n\n\n\n![](/images/InstallLanguages.png){ width=40% style=\"float:right; padding:10px\" }\n\nIf you want to use another language you need to make sure that the dictionary is available in your system so that RStudio can access the dictionary. You can install dictionaries very easily in RStudio. Simply go to `Tools` > `Global options` > `Spelling` and then under `Main dictionary language` select `Install More Languages` from the drop-down menu. Once the additional languages are installed, their dictionaries are available to the `hunspell` package in RStudio.\n\nHowever, you may want to install dictionaries directly, e.g., into your working directory so that you can use the dictionary when working with text data either on your computer or in a cloud environment. In this case, you can go to the [wooorm dictionary GitHub repository](https://github.com/wooorm/dictionaries), which has dict and aff files (i.e., the files that are needed to create a dictionary) for many different languages, and install the dict and aff files manually.  In our case, I downloaded the dict and aff files from the German dictionary, stored them together with the other dictionary files in the `hunspell` package library, and renamed the files as `de.dict` and `de.aff`.\n\n\nIf you then want to use the dictionary, you simply specify the `dict` argument as shown below for a German sentence.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunspell(\"Im LADAL analysieren wir Sprachen und Farben.\", dict = \"de\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"LADAL\"\n```\n\n\n:::\n:::\n\n\n\nThis is the end of this short tutorial on spell checking with R. If you want to go deeper, please check out the documentation site of the `hunspell` package)[https://cran.r-project.org/web/packages/hunspell/vignettes/intro.html] [@hunspell].  \n\n# Citation & Session Info {-}\n\nSchweinberger, Martin. (2023)` *Spell checking text data with R*. Brisbane: The University of Queensland. url: https://ladal.edu.au/spellcheck.html (Version 2023.02.08).\n\n```\n@manual{schweinberger2023spellcheck,\n  author = {Schweinberger, Martin},\n  title = {Spell checking text data with R},\n  note = {https://ladal.edu.au/spellcheck.html},\n  year = {2022},\n  organization = {The University of Queensland, School of Languages and Cultures},\n  address = {Brisbane},\n  edition = {2023.02.08}\n}\n```\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Australia/Brisbane\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] flextable_0.9.7 hunspell_3.0.5  quanteda_4.1.0  stringr_1.5.1  \n[5] dplyr_1.1.4    \n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-1            jsonlite_1.8.9          compiler_4.4.1         \n [4] stopwords_2.3           zip_2.3.1               tidyselect_1.2.1       \n [7] Rcpp_1.0.13             xml2_1.3.6              assertthat_0.2.1       \n[10] fontquiver_0.2.1        textshaping_0.4.0       systemfonts_1.1.0      \n[13] uuid_1.2-1              fastmap_1.2.0           lattice_0.22-6         \n[16] R6_2.5.1                gdtools_0.4.0           generics_0.1.3         \n[19] knitr_1.48              htmlwidgets_1.6.4       tibble_3.2.1           \n[22] openssl_2.2.2           pillar_1.9.0            rlang_1.1.4            \n[25] utf8_1.2.4              fastmatch_1.1-4         stringi_1.8.4          \n[28] xfun_0.49               cli_3.6.3               withr_3.0.2            \n[31] magrittr_2.0.3          digest_0.6.37           grid_4.4.1             \n[34] askpass_1.2.1           lifecycle_1.0.4         vctrs_0.6.5            \n[37] evaluate_1.0.1          glue_1.8.0              data.table_1.16.2      \n[40] officer_0.6.7           fontLiberation_0.1.0    ragg_1.3.3             \n[43] codetools_0.2-20        klippy_0.0.0.9500       fontBitstreamVera_0.1.1\n[46] fansi_1.0.6             rmarkdown_2.28          tools_4.4.1            \n[49] pkgconfig_2.0.3         htmltools_0.5.8.1      \n```\n\n\n:::\n:::\n\n\n\n\n***\n\n[Back to top](#introduction)\n\n[Back to HOME](https://ladal.edu.au)\n\n***\n\n\n# References{-}\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/clipboard-1.7.1/clipboard.min.js\"></script>\n<link href=\"../../site_libs/primer-tooltips-1.4.0/build.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/klippy-0.0.0.9500/css/klippy.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/klippy-0.0.0.9500/js/klippy.min.js\"></script>\n<link href=\"../../site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/tabwid-1.1.3/tabwid.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}